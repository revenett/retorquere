#!/usr/bin/env python3

from urllib.request import urlretrieve
import argparse
import json
import os
import re
import shutil
import subprocess
import sys
import tarfile
from pygit2 import Repository

import pathlib
for d in pathlib.Path(__file__).resolve().parents:
  if os.path.exists(os.path.join(d, 'behave.ini')):
    ROOT = d
    break
os.chdir(ROOT)
# because behave doesn't think it's useful to be able to load local stuff... oy...
sys.path.insert(0, os.path.abspath('test/features/steps'))

def load_json(path, default):
  try:
    with open(path) as f:
      return json.load(f)
  except:
    return default
class BooleanAction(argparse.Action):
  def __init__(self, option_strings, dest, nargs=None, **kwargs):
    super().__init__(option_strings, dest, nargs=0, **kwargs)

  def __call__(self, parser, namespace, values, option_string=None):
    setattr(namespace, self.dest, option_string.startswith('--no'))
parser = argparse.ArgumentParser()
parser.add_argument('--stop', '--no-stop', dest='stop', action=BooleanAction, default=True)
parser.add_argument('--jurism', action='store_true', default=os.environ.get('CLIENT') == 'jurism')
parser.add_argument('--beta', action='store_true')
parser.add_argument('--keep', '--no-keep', dest='keep', action=BooleanAction, default=False)
parser.add_argument('--workers', '--no-workers', dest='workers', action=BooleanAction, default=True)
parser.add_argument('--this', action='store_true')
parser.add_argument('--slow', action='store_true',
  default = os.environ.get('TRAVIS_BRANCH') in load_json(os.path.join(ROOT, '.slow.json'), []) or
            '#slow' in os.environ.get('TRAVIS_COMMIT_MESSAGE', '') or
            os.environ.get('TRAVIS_EVENT_TYPE') == 'cron'
)
parser.add_argument('--tagged', action='store_true', default=os.environ.get('TRAVIS_TAG', '') != '')
parser.add_argument('--nightly', action='store_true', default=os.environ.get('TRAVIS_EVENT_TYPE') == 'cron')
args, unknownargs = parser.parse_known_args()
sys.argv = sys.argv[:1] + unknownargs

sys.argv.extend(['--define', f"client={'jurism' if args.jurism else 'zotero'}"])
sys.argv.extend(['--define', f'kill={str(not args.keep).lower()}'])
sys.argv.extend(['--define', f'workers={str(args.workers).lower()}'])
if args.stop: sys.argv.append('--stop')

if args.this:
  repo = Repository('.')
  branch = repo.head.name.split('/')[-1]
  assert re.match(r'^gh-[0-9]+$', branch)
  sys.argv.extend(['--tags', branch.replace('gh-', '@') ])
  args.nightly = True

JOB_NUMBER = int(re.search(r'^[0-9]+\.([0-9]+)$', os.environ.get('TRAVIS_JOB_NUMBER', '0.0')).group(1))
if JOB_NUMBER == 0: # local run
  process = subprocess.Popen(['npm', 'run', 'build'], stdout=subprocess.PIPE)
  while True:
    line = process.stdout.readline()
    print(line.decode('utf-8'), end='')
    if process.poll() is not None: break
  returncode = process.poll()
  if returncode != 0:
    print(f'Build exited with exit code {returncode}')
    sys.exit(returncode)

elif args.nightly and not args.tagged: # only test for beta o
  args.beta = (JOB_NUMBER % 2) == 1
  args.slow = True

else:
  sys.argv.extend(['--tags', f"{'~' if (JOB_NUMBER % 2) == 1 else ''}@test-cluster-1"])
  args.slow = args.slow or args.tagged

if args.jurism or args.beta:
  print(f"********* SKIPPING{' BETA' if args.beta else ''} BUILD FOR {'JURIS-M' if args.jurism else 'ZOTERO'} UNTIL FURTHER NOTICE ****************")
  sys.exit()

if args.slow: sys.argv.extend(['--tags', '~@slow'])
sys.argv.extend(['--define', f'beta={str(args.beta).lower()}'])
print(' '.join(sys.argv), args)

#https://stackoverflow.com/questions/28829350/run-python-behave-from-python-instead-of-command-line
from behave.__main__ import Configuration, run_behave
sys.exit(run_behave(Configuration(None)))
