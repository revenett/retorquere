#!/usr/bin/env python3

import sys
import os
import json
import subprocess
import argparse

import pathlib
for d in pathlib.Path(__file__).resolve().parents:
  if os.path.exists(os.path.join(d, 'behave.ini')):
    ROOT = d
    break
os.chdir(ROOT)

# because behave doesn't think it's useful to be able to load local stuff... oy...
sys.path.insert(0, os.path.abspath('test/features/steps'))

parser = argparse.ArgumentParser()
parser.add_argument('--no-stop', action='store_true')
parser.add_argument('--nightly', action='store_true')
parser.add_argument('--jurism', action='store_true')

args, unknownargs = parser.parse_known_args()
sys.argv = sys.argv[:1] + unknownargs

# build before test unless on CI
if not 'CI' in os.environ:
  process = subprocess.Popen(['npm', 'run', 'build'], stdout=subprocess.PIPE)
  while True:
    line = process.stdout.readline()
    print(line.decode('utf-8'), end='')
    if process.poll() is not None: break
  returncode = process.poll()
  if returncode != 0:
    print(f'Build exited with exit code {returncode}')
    sys.exit(returncode)

# augment command line
## stop on first error by default
if not args.no_stop and 'CI' not in os.environ:
  sys.argv.append('--stop')

## exclude @nightly by default
if not args.nightly and os.environ.get('TRAVIS_EVENT_TYPE', '') != 'cron' and '#nightly' not in os.environ.get('TRAVIS_COMMIT_MESSAGE', ''):
  sys.argv.extend(['--tags', '~@nightly'])

if args.jurism: sys.argv.extend(['--define', f'client=jurism'])

print(' '.join(sys.argv))

#https://stackoverflow.com/questions/28829350/run-python-behave-from-python-instead-of-command-line
from behave.__main__ import Configuration, run_behave
sys.exit(run_behave(Configuration(None)))
