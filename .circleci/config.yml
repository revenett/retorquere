version: 2

_defaults: &defaults
  working_directory: &working_directory ~/retorquere/zotero-better-bibtex
  shell: /bin/bash --login
  environment:
    CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
    CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
  docker:
  - image: circleci/ruby:2.4.3-node
    command: /sbin/init
  
_run:
  setenv: &setenv
    command: |-
      echo -e "export PATH=${PATH}:${HOME}/.yarn/bin:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin" >> $BASH_ENV
      case $CIRCLE_NODE_INDEX in
        2|3)  echo -e "export ZOTERO=jurism" >> $BASH_ENV
              ;;
        *)    echo -e "export ZOTERO=zotero" >> $BASH_ENV
              ;;
      esac
  apt: &apt_get
    command: mkdir -p $HOME/aptcache && sudo apt-get -o dir::cache::archives="$HOME/aptcache" update && sudo apt-get -o dir::cache::archives="$HOME/aptcache" install -y libgtk-3-0 libdbus-glib-1-2
  ruby: &ruby
    command: gem install bundler && gem update bundler && bundle config && (bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3)
    no_output_timeout: 180s
  node: &node
    command: yarn install

jobs:
  build:
    <<: *defaults

    steps:
    - run: *setenv
    - checkout
    - run: git submodule sync && git submodule update --init --recursive
    - restore_cache:
        keys:
        # This branch if available
        - v1-dep-{{ .Branch }}-
        # Default branch if not
        - v1-dep-master-
        # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
        - v1-dep-
    - run: *apt_get
    - run: *ruby
    - run: *node
    - run: ./zotero5_installer.py --client zotero --version latest --destination local --replace --cache ~/downloads
    - run: ./zotero5_installer.py --client jurism --version latest --destination local --replace --cache ~/downloads
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
          # home
          - ~/aptcache
          - ~/bin
          - ~/.bundle
          - ~/downloads
          - ~/.yarn

          # working directoey
          - citation-style-language-locales
          - node_modules
          - vendor/bundle

    - run: yarn run build

    - store_artifacts:
        path: xpi

    - persist_to_workspace:
        root: *working_directory
        paths:
          - xpi
          - citation-style-language-locales
          - node_modules
          - vendor/bundle

    - persist_to_workspace:
        root: ~
        paths:
          - aptcache
          - bin
          - downloads

  test:
    <<: *defaults
    parallelism: 2

    steps:
    - run: *setenv

    - attach_workspace:
        at: *working_directory
    - attach_workspace:
        at: ~

    - run: *apt_get
    - run: *ruby

    - run: |-
        set -e

        mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS

        if [ "$NIGHTLY" = "true" ]; then
          yarn run s3form
        fi

        if [ "$NIGHTLY" = "true" -o "$CIRCLE_TAG" ]; then
          NIGHTLY_TAGS=""
        else
          NIGHTLY_TAGS="not @nightly and"
        fi

        case $CIRCLE_NODE_INDEX in
          0|2)  export CIRCLE_TESTS="$NIGHTLY_TAGS @test-cluster-1"
                ;;
          *)    export CIRCLE_TESTS="$NIGHTLY_TAGS not @test-cluster-1"
                ;;
        esac

        export LOGS=$CIRCLE_ARTIFACTS
        bundle exec cucumber --strict --tags "$CIRCLE_TESTS"
        cp xpi/zotero-better-bibtex-*.xpi $CIRCLE_ARTIFACTS
        cp -r ~/.BBTZ5TEST/$ZOTERO/better* $CIRCLE_ARTIFACTS
        ls -lh $CIRCLE_ARTIFACTS/*

    - store_test_results:
        path: /tmp/circleci-test-results
    - store_artifacts:
        path: /tmp/circleci-artifacts

    # Deployment
    # Your existing circle.yml file contains deployment steps.
    # The config translation tool does not support translating deployment steps
    # since deployment in CircleCI 2.0 are better handled through workflows.
    # See the documentation for more information https://circleci.com/docs/2.0/workflows/
    # https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs
    # https://circleci.com/docs/2.0/configuration-reference/#persist_to_workspace
    # https://circleci.com/docs/1.0/ssh-between-build-containers/

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
