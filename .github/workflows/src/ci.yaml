name: continuous integration

on:
  push:
  schedule:
  - cron:  '0 0 * * *'

_anchors:
  install_python: &install_python
    name: install python
    uses: actions/setup-python@v2
    with:
      python-version: 3.8
  install_python_packages: &install_python_packages
    name: install python packages
    run: |
      pip install packaging
      python -m pip install --upgrade pip
      if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  install_node: &install_node
    name: install node
    uses: actions/setup-node@v1
    with:
      node-version: 14.x
  install_node_packages: &install_node_packages
    name: install node packages
    run: npm install
  cache: &cache
    name: Cache python/node dependencies
    uses: actions/cache@v2
    with:
      path: |
        ~/.npm
        ~/.cache/pip
      key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}-${{ hashFiles('requirements.txt') }}
      restore-keys: |
        ${{ runner.os }}-build-${{ env.cache-name }}-
        ${{ runner.os }}-build-
        ${{ runner.os }}-

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
        submodules: true  # Fetch Hugo themes (true OR recursive)
        fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

    - *cache
    - *install_python
    - *install_python_packages
    - *install_node
    - *install_node_packages

    - run: npm run build

    - name: store build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: |
          xpi/
          gen/

    - uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: latest
        extended: true
    - run: npm run docs:deploy
    - uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site/public

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        client: [zotero, jurism]
        slice: ['1', '2']
    steps:
    - uses: actions/checkout@v2
    - name: fetch build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts
      
    - *cache
    - *install_python
    - *install_python_packages

    - run: curl -sL https://github.com/retorquere/zotero-deb/releases/download/apt-get/install.sh | sudo bash
    - run: sudo apt-get update
    - run: sudo apt-get install ${{ matrix.client }}
    - run: sudo ./util/install-beta ${{ matrix.client }}

    # needs logs/logs to have them show up as logs in the artifact... no idea why
    - name: Run headless test
      uses: GabrielBB/xvfb-action@v1
      with:
        run: ./test/behave --client ${{ matrix.client }} --logs logs/logs --format travis --balance ${{ matrix.slice }}

    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: debug log ${{ matrix.client }} ${{ matrix.slice }}
        path: ~/.BBTZ5TEST.log

    - name: store test artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: |
          logs/

  release:
    if: github.event_name != 'schedule'
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: fetch build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts

    - *cache
    - *install_python
    - *install_python_packages
    - *install_node
    - *install_node_packages

    - run: npm run release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: rebalance tests
      run: ./util/rebalance.py
    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        repository: release
        commit_message: ${{ github.event.inputs.commit_message }}
      if: github.event_name == 'workflow_dispatch'

