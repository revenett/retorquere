name: automated tests

on:
  push: null
  pull_request: null
  schedule:
  - cron: 0 0 * * *

_anchors:
  install_python: &install_python
    name: install python
    uses: actions/setup-python@v2
    with:
      python-version: 3.8
  install_node: &install_node
    name: install node
    uses: actions/setup-node@v2
    with:
      node-version: 16.x
  cache: &cache
    name: Cache python/node dependencies
    id: cache
    uses: actions/cache@v2
    env:
      cache-name: v3
    with:
      path: |
        ~/.npm
        ~/.nocache/pip
        ${{ env.pythonLocation }}
      key: ${{ runner.os }}-build-${{ env.pythonLocation }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}-${{ hashFiles('requirements.txt') }}
  install_python_packages: &install_python_packages
    name: install python packages
    run: |
      pip install packaging
      python -m pip install --upgrade pip
      pip install -r requirements.txt
  install_node_packages: &install_node_packages
    name: install node packages
    run: npm install

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
        submodules: true  # Fetch Hugo themes (true OR recursive)
        fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod
    - run: echo "::set-output name=version::"`jq -r .version package.json`
      id: version
    - name: cancel spurious build on tagged version
      uses: andymckay/cancel-action@master
      if: github.event.head_commit.message == steps.version.outputs.version && !startsWith(github.ref, 'refs/tags/')

    - *install_python
    - *install_node
    - *cache
    - *install_python_packages
    - *install_node_packages

    - run: npm run build

    - name: store build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: |
          xpi/
          gen/

    - uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: latest
        extended: true
    - run: npm run docs:deploy
    - uses: peaceiris/actions-gh-pages@v3
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site/public

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        client: [zotero, jurism]
        bin: ['1', '2']
    steps:
    - uses: actions/checkout@v2
    - name: fetch build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts
      
    - *install_python
    - *cache
    - *install_python_packages

    - name: install ${{ matrix.client }}
      run: |
        # ubuntu bug
        #sudo add-apt-repository ppa:tj/bugfixes
        #sudo apt-get update
        #sudo apt install apt

        #curl -sL https://github.com/retorquere/zotero-deb/releases/download/apt-get/install.sh | sudo bash
        # curl -sL https://downloads.sourceforge.net/project/zotero-deb/install.sh | sudo bash
        curl -sL https://apt.retorque.re/file/zotero-apt/install.sh | sudo bash
        sudo apt-get update
        sudo apt-get install ${{ matrix.client }}

    - name: install ${{ matrix.client }} beta
      if: matrix.client != 'jurism'
      run: sudo apt-get install ${{ matrix.client }}-beta

    # fast test
    - if: contains(github.event.commits[0].message, '[fast-test]')
      run: echo "##[set-output name=this;]--test-this"
      id: test

    # needs logs/logs to have them show up as logs in the artifact... no idea why
    - name: Run headless test
      uses: GabrielBB/xvfb-action@v1
      # continue-on-error: ${{ matrix.client == 'jurism' }}
      env:
        PYTHONUNBUFFERED: true
      with:
        run: ./test/behave --client ${{ matrix.client }} --logs logs/logs --format travis --bin ${{ matrix.bin }} ${{ steps.test.outputs.this }}

    - uses: actions/upload-artifact@v2
      if: ${{ failure() || cancelled() }}
      with:
        name: debug log ${{ matrix.client }} ${{ matrix.bin }}
        path: ~/.BBTZ5TEST.log

    - name: store test artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: |
          logs/

#    - name: Setup tmate session
#      if: ${{ failure() }}
#      uses: mxschmitt/action-tmate@v3
#      with:
#        limit-access-to-actor: true

  release:
    if: github.event_name != 'schedule'
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: fetch build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts

    - *install_python
    - *install_node
    - *cache
    - *install_python_packages
    - *install_node_packages

    - run: npm run release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: rebalance tests
      id: logs
      if: github.ref == 'refs/heads/master'
      run: |
        ./util/rebalance.py ${{ github.ref }} test/balance.json
        ./util/loaded.py ${{ github.ref }} test/loaded.json
    - uses: stefanzweifel/git-auto-commit-action@v4
      if: steps.logs.outputs.balance || steps.logs.outputs.loaded
      continue-on-error: true
      with:
        commit_message: Rebalance test suite
        file_pattern: ${{ steps.logs.outputs.balance }} ${{ steps.logs.outputs.loaded }}
        skip_dirty_check: false

