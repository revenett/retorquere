name: continuous integration

on:
  push:
  schedule:
  - cron:  '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: install python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: install node
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Cache python/node dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-dependencies
      with:
        path: |
          ~/.npm
          ~/.cache/pip
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: install python/node dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        npm install

    - run: npm run build
    - name: store build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: |
          xpi
          gen

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        client: [ 'zotero', 'jurism' ]
        slice: [ '1', '2' ]
    steps:
    - uses: actions/checkout@v2
    - name: fetch build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts
    - name: install python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Cache python/node dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-dependencies
      with:
        path: |
          ~/.npm
          ~/.cache/pip
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: install python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - run: curl -sL https://github.com/retorquere/zotero-deb/releases/download/apt-get/install.sh | sudo bash
    - run: sudo apt-get update
    - run: sudo apt-get install ${{ matrix.client }}
    - run: sudo ./util/install-beta ${{ matrix.client }}
    - name: Run headless test
      uses: GabrielBB/xvfb-action@v1
      with:
        run: ./test/behave --client ${{ matrix.client }} --format json.pretty --outfile behave.json --format travis --balance ${{ matrix.slice }}
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: debug log ${{ matrix.client }} ${{ matrix.slice }}
        path: '~/.BBTZ5TEST.log'

  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: install node
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Cache python/node dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-dependencies
      with:
        path: |
          ~/.npm
          ~/.cache/pip
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: install python/node dependencies
      run: |
        npm install

    - run: npm run release
