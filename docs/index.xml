<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Better BibTeX for Zotero</title>
    <link>/</link>
    <description>Recent content on Better BibTeX for Zotero</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Customized exports</title>
      <link>/exporting/customized-exports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/exporting/customized-exports/</guid>
      <description>Better BibTex adds a couple of export formats to Zotero&amp;rsquo;s export dialog. The Better BibTeX configuration pane can be found under the regular Zotero preferences pane, tab &amp;lsquo;Better BibTeX&amp;rsquo;. Through the configuration pane of BBT you can customize the BibTeX file that will be exported:
 Automated background exports. Tick &amp;lsquo;keep updated&amp;rsquo; during export, and that&amp;rsquo;s that. Unicode conversion: the default is to retain unicode characters on export for BibLaTeX, and to convert to LaTeX commands (where possible) for BibTeX.</description>
    </item>
    
    <item>
      <title>Scripting</title>
      <link>/exporting/scripting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/exporting/scripting/</guid>
      <description>You wanted customized&amp;hellip; You got customized. If you go into the Advanced tab of the Better BibTeX preferences you will find a text box (empty by default) where you can edit a javascript snippet which will be executed for each reference generated in the Bib(La)TeX exporter. In this code, you have access to the reference just before it will be written out and cached. There is an API to do this, and it&amp;rsquo;s fairly stable, but usually you can just open a new issue and ask me to write it, and I&amp;rsquo;ll add it here (it&amp;rsquo;s how the examples got here).</description>
    </item>
    
    <item>
      <title>Advanced</title>
      <link>/exporting/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/exporting/advanced/</guid>
      <description>You are a hardcore LaTeX user If you&amp;rsquo;d really just rather hand-code your LaTeX constructs, BBT makes that possible:
 You can add literal LaTeX anywhere in your reference by surrounding it with &amp;lt;pre&amp;gt;....&amp;lt;/pre&amp;gt; tags. BBT will convert to/from unicode and (un)escape where required but will pass whatever is enclosed in the pre tags unchanged. An entry tagged with #LaTeX (case-sensitive!) will have all fields exported as if they&amp;rsquo;re wrapped in &amp;lt;pre&amp;gt;.</description>
    </item>
    
    <item>
      <title>Citation keys</title>
      <link>/better-bibtex/configuration/citation-keys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/better-bibtex/configuration/citation-keys/</guid>
      <description>Citation key format default: â€‹[auth:lower][shorttitle3_3][year]
Set the pattern used to generate citation keys. The format of the keys is documented here.
Force citation key to plain text default: True
If you have deviated from the default citation key format pattern by specifying your own, you may wind up with non-ASCII characters in your citation keys. You can prevent that using the fold function at the appropriate place in your pattern, but checking this checkbox will just apply fold to all your keys.</description>
    </item>
    
    <item>
      <title>Export</title>
      <link>/better-bibtex/configuration/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/better-bibtex/configuration/export/</guid>
      <description>Export unicode as plain-text latex commands (recommended) default: True
* BibTeX has really spotty Unicode support, so you generally want this on. It will translate things like accented characters to their equivalent LaTeX constructs on export.
Disregard name prefixes when sorting default: False
* Name handling is a lot more complex than I had ever thought it to be. A lot more complex. BibTeX has really limited ways of dealing with names with particles (van, von, de, etc).</description>
    </item>
    
    <item>
      <title>Automatic export</title>
      <link>/better-bibtex/configuration/automatic-export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/better-bibtex/configuration/automatic-export/</guid>
      <description>Automatic export default: On Change
Determines when automatic exports are kicked off. Having it disabled still marks auto-exports as needing updates, so when you re-enable it, those exports will start. On-change means exports happen whenever a reference in the export changes/is added/is removed. On idle does more or less what Disabled (that is, no exports but mark as needing changes), but will kick off exports when your computer is idle.</description>
    </item>
    
    <item>
      <title>Advanced</title>
      <link>/better-bibtex/configuration/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/better-bibtex/configuration/advanced/</guid>
      <description>Deterministically order references and fields; primarily for version control. default: False
When on, BBT will deterministically order references on export. This is primarily interesting if you keep the exported file under some kind of version control. Comes at performance and memory consumption cost.
postscript default: &amp;lt;not set&amp;gt;
Snippet of javascript to run after each reference generation.
@string definitions default: &amp;lt;not set&amp;gt;
If you have externally maintained @string vars paste them here and they will be resolved for subsequent imports</description>
    </item>
    
    <item>
      <title>Hidden preferences</title>
      <link>/better-bibtex/configuration/hidden-preferences/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/better-bibtex/configuration/hidden-preferences/</guid>
      <description>The following settings are not exposed in the UI, but can be found under Preferences/Advanced/Config editor.
All are prefixed with extensions.zotero.translators.better-bibtex. in the table you will find there
ascii default: &amp;lt;not set&amp;gt;
If you have unicode turned on you can still selectively replace some characters to plain-text commands; any characters entered here will always be replaced by their LaTeX-command counterparts.
autoExportIdleWait default: 10
Number of seconds to wait after your system goes idle before kicking off auto-exports.</description>
    </item>
    
    <item>
      <title>Bundled translators</title>
      <link>/better-bibtex/bundled-translators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/better-bibtex/bundled-translators/</guid>
      <description>Better BibTeX bundles 5 translators you might care about:
Export These translators are supported by the auto-export functionality built into Better BibTeX:
 Better BibLaTeX exports references in BibLaTeX format (but better, natch) Better BibTeX exports references in BibTeX format Better CSL JSON exports references in pandoc-compatible CSL-JSON format, with added citation keys and parsing of metadata Better CSL YAML exports the same as the Better CSL JSON exporter, but in YAML format Collected Notes exports just notes &amp;ndash; standalone notes and notes attached to references, not the extra field &amp;ndash; to HTML.</description>
    </item>
    
    <item>
      <title>AUX Scanner</title>
      <link>/citing/aux-scanner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/citing/aux-scanner/</guid>
      <description>You can populate a reference collection, or tag items in your library, from an existing paper by scanning the aux file generated by bibtex. AUX Scanning can be triggered from the Tools menu (for tagging the cited items) or by right-clicking a collection (for adding them to a collection). The scanner will read your AUX files and will put references you cited in the associated LaTeX document into the current collection.</description>
    </item>
    
    <item>
      <title>Cite as you Write</title>
      <link>/citing/cayw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/citing/cayw/</guid>
      <description>Good news for TeXnicians and those down with Mark (aka Markdown, RST, whatnot): this is the time to go pester the author of your favorite editor for Zotero integration!
Editor integration vim Graciously supplied by David Lukes:
paste it in your .vimrc (and modify to your liking):
function! ZoteroCite() &amp;quot; pick a format based on the filetype (customize at will) let format = &amp;amp;filetype =~ &#39;.*tex&#39; ? &#39;citep&#39; : &#39;pandoc&#39; let api_call = &#39;http://localhost:23119/better-bibtex/cayw?</description>
    </item>
    
    <item>
      <title>Frequently Asked Questions</title>
      <link>/support/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/support/faq/</guid>
      <description>Are there any plans to support Firefox 57+? BBT lives where Zotero lives, and Zotero only has standalone these days. BBT is installed inside Zotero instead of in the browser. Please see the installation instructions to get started with BBT.
BBT is changing the capitalization of my titles &amp;ndash; why? There isn&amp;rsquo;t a straightforward one-to-one mapping for all Zotero to Bib(La)TeX fields. For most I can make reasonable choices, but there are some things where Better BibTeX takes a little more liberties with your references in order to get sensible output.</description>
    </item>
    
    <item>
      <title>Performance</title>
      <link>/support/performance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/support/performance/</guid>
      <description>The Better BibTeX exporters are a lot slower than the standard Zotero Bib(La)TeX exporters. If you have a small library, you will not likely notice this, but if you have several thousand references, and you are in the habit of exporting substantial parts of your library, this gets annoying really fast.
To deal with this problem, Better BibTeX implements an extensive caching system. With a filled cache, Better BibTeX is substantially faster than the default Zotero exporters.</description>
    </item>
    
    <item>
      <title>Sponsoring BBT</title>
      <link>/sponsoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/sponsoring/</guid>
      <description>{warning}
While the development needs of BBT are to a large extent covered by the use of services such as github and travis, my development system does require the occasional upgrade. My trusty MacBook Air is not really hacking it anymore, and in order to do decent cross-platform support, a MacBook (or a system capable of running macOS in VMware player) is what I need. Anything you can spare towards making that upgrade a reality is very much appreciated.</description>
    </item>
    
    <item>
      <title>Translations</title>
      <link>/support/translations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/support/translations/</guid>
      <description>BBT is currently available in English, German and French. You can help out by adding new translations or fixing existing ones on Crowdin.</description>
    </item>
    
    <item>
      <title>test</title>
      <link>/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/test/</guid>
      <description>HTML Citation keys
&amp;lt;h3&amp;gt;Citation key format&amp;lt;/h3&amp;gt; &amp;lt;p&amp;gt;default: &amp;lt;code&amp;gt;â€‹[auth:lower][shorttitle3_3][year]&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;Set the pattern used to generate citation keys. The format of the keys is documented &amp;lt;a href=&amp;quot;citation-keys&amp;quot;&amp;gt;here&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt; &amp;lt;h3&amp;gt;Force citation key to plain text&amp;lt;/h3&amp;gt; &amp;lt;p&amp;gt;default: &amp;lt;code&amp;gt;True&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;If you have deviated from the default citation key format pattern by &amp;lt;a href=&amp;quot;citation-keys&amp;quot;&amp;gt;specifying your own&amp;lt;/a&amp;gt;, you may  wind up with non-ASCII characters in your citation keys. You can prevent that using the fold function at the appropriate place in your pattern, but checking this checkbox will just apply fold to all your keys.</description>
    </item>
    
  </channel>
</rss>