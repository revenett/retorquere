[
{
	"uri": "/better-bibtex/",
	"title": "Installation",
	"tags": [],
	"description": "",
	"content": "Install by downloading the latest release, and then in Zotero:\n In the main menu go to Tools \u0026gt; Add-ons Select \u0026lsquo;Extensions\u0026rsquo; Click on the gear in the top-right corner and choose \u0026lsquo;Install Add-on From File\u0026hellip;\u0026rsquo; Choose .xpi that you\u0026rsquo;ve just downloaded, click \u0026lsquo;Install\u0026rsquo; Restart Zotero  After the initial installation, the plugin will auto-update to newer releases, so you should need to perform the process described here only once.\nNote that the default setting of BBT will generate different citekeys than Zotero would itself generate; the keys from Zotero are not always safe for use in bibtex/biber. If you want to get the stock zotero keys, set the pattern in the preferences to [zotero]. I very much recommend not choosing [zotero] as your pattern unless you have existing articles that use keys generated by previous Zotero-native BibTeX export.\nNote that BBT needs to be installed in Zotero, not Firefox. There used to be two versions of Zotero, one standalone, and one that was installed in Firefox. BBT is a Zotero extension and lives where Zotero lives; Zotero is no longer available as a Firefox plugin, only as standalone.\nOn first install you will be asked a few questions. Please read these instead of just clicking through.\n"
},
{
	"uri": "/exporting/",
	"title": "Push/Pull export",
	"tags": [],
	"description": "",
	"content": " Push Export / Auto-Export When exporting using Better BibTex you will be offered a new export option: Keep updated. Checking this option registers the export for automation; any changes to the collection after you\u0026rsquo;ve completed the current export will trigger an automatic re-export to update the bib file. You can review/remove exports from the BBT preferences. While I\u0026rsquo;ve gone to some lengths to make sure performance is OK, don\u0026rsquo;t go overboard with the number of auto-exports you have going. Also, exporting only targeted selections over your whole library will get you better performance. You can set up separate exports for separate papers for example if you have set up a collection for each.\ngit support BBT auto-export works nicely with git services (such as Overleaf, which is where I use it myself; the instructions for setting up Overleaf for git can be found here \u0026ndash; note these instructions are for Overleaf V1 projects, not V2 projects, which will get git support only late 2018), but any git service (gitlab, github, etc) should work exactly the same. I\u0026rsquo;m toying with various online services here.\nTo activate git support, first clone the repo that holds your article/thesis/whatnot, run git config zotero.betterbibtex.push true in a command shell in that repo, and set up an auto export to that directory; at each update, BBT will now also push your library to the git service. For the technically curious, that means it does:\n git pull Performs the export git add \u0026lt;your library file\u0026gt; git commit -m \u0026lt;your library file\u0026gt; git push  Note that the nature of git commit/push is not file-bound; if you made edits to other files, and added those, they will be committed and pushed along. If you want to be super-careful, the best way to go about it is to have a separate clone of your repo that BBT auto-exports to, and then another repo that you do your own edits in. I don\u0026rsquo;t use it myself this way, but you have been warned.\nPull Export You can fetch your library as part of your build, using curl (for example by using the included zoterobib.yaml arara rule), or with a BibLaTeX remote statement like\n\\addbibresource[location=remote]{http://localhost:23119/better-bibtex/collection?/0/8CV58ZVD.biblatex}  You can then fetch your bibliography on the url http://localhost:23119/better-bibtex/collection?[collectionID].[format], where collectionID is:\n the ID you get by right-clicking your collection and selecting \u0026ldquo;Show collection key\u0026rdquo; the path \u0026ldquo;/[library id]/full/path/to/collection\u0026rdquo; (the library id is the first number from the key you get in the option above; it\u0026rsquo;s always \u0026lsquo;0\u0026rsquo; for your personal library)  or any multiple of those, separated by a \u0026lsquo;+\u0026rsquo; sign.\nThe format is either \u0026lsquo;bibtex\u0026rsquo; or \u0026lsquo;biblatex\u0026rsquo;, and determines the translator used for export.\nYou can add options to the export as URL parameters:\n \u0026amp;exportCharset=\u0026lt;charset\u0026gt; \u0026amp;exportNotes=[true|false] \u0026amp;useJournalAbbreviation=[true|false]  "
},
{
	"uri": "/citing/",
	"title": "Citation Keys",
	"tags": [],
	"description": "",
	"content": " Generating citekeys for your references The BibTeX citations keys generated by the standard Zotero exporters are fully auto-generated, using an algorithm that usually generates unique keys. For serious LaTeX users, \u0026ldquo;usually\u0026rdquo; presents the following problems:\n If a non-unique key is generated, which one gets postfixed with a distinguishing character is essentially non-deterministic. The keys are always auto-generated, so if you correct a typo in the author name or title, the key will change You can\u0026rsquo;t see the citation keys until you export them  For a LaTeX author, the citation keys have their own meaning, fully separate from the other reference data, even if people usually pick a naming scheme related to them. As the citation key is the piece of data that connects your bibliography, this is a piece of data you want to have control over. BBT offers you this control:\n Set your own, fixed citation keys Stable citation keys, without key clashes. BBT generates citation keys that take into account other existing keys in your library in a deterministic way, regardless of what part of your library you export, or the order in which you do it. Generate citation keys from JabRef patterns  You can also\n Drag and drop LaTeX citations to your favorite LaTeX editor Show both pinned (fixed) citation keys and dynamically generated ones in the reference list view Search for citation keys (if you select \u0026ldquo;All fields and tags\u0026rdquo; in the search box)  Set your own, fixed citation keys You can fix the citation key for a reference by adding the text \u0026ldquo;bibtex: [your citekey]\u0026rdquo; (sans quotes) anywhere in the \u0026ldquo;extra\u0026rdquo; field of the reference, or by using biblatexcitekey[my_key]. You can generate a fixed citation key by selecting references, right-clicking, and selecting \u0026ldquo;Generate BibTeX key\u0026rdquo;.\nDrag and drop/hotkey citations You can drag and drop citations into your LaTeX/Markdown/Orgmode editor, and it will add a proper \\cite{citekey}/[@citekey]/[[zotero://select...][@citekey]. The cite command is configurable for LaTeX by setting the config option in the [[Preferences|Configuration]]. Do not include the leading backslash. This feature requires a one-time setup: go to Zotero preferences, tab Export, under Default Output Format, select \u0026ldquo;Better BibTeX Quick Copy\u0026rdquo;, and choose the Quick Copy format under the Citation keys preferences for BBT.\nFind duplicate keys through integration with Report Customizer The plugin will generate BibTeX comments to show whether a key conflicts and with which entry. BBT integrates with Zotero: Report Customizer to display the BibTeX key plus any conflicts between them in the zotero report.\nConfigurable citekey generator BBT also implements a new citekey generator for those entries that don\u0026rsquo;t have one set explicitly; the formatter pattern language mostly follows the JabRef key formatting syntax in the Better BibTeX preferences (you can get there via the Zotero preferences, or by clicking the Better BibTeX \u0026ldquo;Preferences\u0026rdquo; button in the addons pane.\nThe default key pattern is {{ site.data.preferences.citekeyFormat }}; if you have papers that use keys which were generated by the key generator of the standard Bib(La)TeX exporters of Zotero you may want to use [zotero:clean] instead in order to ease migration from existing exports for people who previously used the standard Zotero Bib(La)TeX exports. You will be offered this choice on first run of BBT.\nA common pattern is [auth:lower][year], which means\n last name of first author without spaces, in lowercase year of publication if any, a letter postfix (a, b, c, etc) in case of a clash (this part is always added, you can\u0026rsquo;t disable it, although you can change it to Zotero-style numeric)  note that changing the pattern used to cause all your non-fixed keys to be regenerated in Zotero 4. In Zotero 5, this is no longer the case; changing a pattern will only affect references being created/changed after you changed the pattern. If you want your keys to update after a pattern change you will have to select your references, right-click, and select Refresh. This will not affect keys you have pinned.\nIf you want to get fancy, you can set multiple patterns separated by a vertical bar, of which the first will be applied that yields a non-empty string. If all return a empty string, a random key will be generated.\nGenerating citekeys The full list of functions (extract data from your reference into your citekey) and filters (change the extracted data) is:\nFunctions  auth.auth.ea / edtr.edtr.ea: The last name of the first two authors, and \u0026#34;.ea\u0026#34; if there are more than two.\n auth.etal / edtr.etal: The last name of the first author, and the last name of the second author if there are two authors or \u0026#34;.etal\u0026#34; if there are more than two.\n authEtAl / edtrEtAl: The last name of the first author, and the last name of the second author if there are two authors or \u0026#34;EtAl\u0026#34; if there are more than two. This is similar to auth.etal. The difference is that the authors are not separated by \u0026#34;.\u0026#34; and in case of more than 2 authors \u0026#34;EtAl\u0026#34; instead of \u0026#34;.etal\u0026#34; is appended.\n authForeIni / edtrForeIni: The forename initial of the first author.\n authIniN / edtrIniN: The beginning of each author\u0026#39;s last name, using no more than N characters.\n authN_M / edtrN_M: The first N (default: all) characters of the Mth (default: first) author\u0026#39;s last name.\n authorIni / editorIni: The first 5 characters of the first author\u0026#39;s last name, and the last name initials of the remaining authors.\n authorLastForeIni / editorLastForeIni: The forename initial of the last author.\n authorLast / editorLast: The last name of the last author\n authorsAlpha / editorsAlpha: Corresponds to the BibTeX style \u0026#34;alpha\u0026#34;. One author: First three letters of the last name. Two to four authors: First letters of last names concatenated. More than four authors: First letters of last names of first three authors concatenated. \u0026#34;\u0026#43;\u0026#34; at the end.\n authorsN / editorsN: The last name of up to N authors. If there are more authors, \u0026#34;EtAl\u0026#34; is appended.\n authshort / edtrshort: The last name if one author is given; the first character of up to three authors\u0026#39; last names if more than one author is given. A plus character is added, if there are more than three authors.\n firstpage: The number of the first page of the publication (Caution: this will return the lowest number found in the pages field, since BibTeX allows 7,41,73--97 or 43\u0026amp;#43;.)\n journal: returns the journal abbreviation, or, if not found, the journal title, If \u0026#39;automatic journal abbreviation\u0026#39; is enabled in the BBT settings, it will use the same abbreviation filter Zotero uses in the wordprocessor integration. You might want to use the abbr filter on this.\n keywordN: Tag number N\n lastpage: The number of the last page of the publication (See the remark on firstpage)\n library: returns the name of the shared group library, or nothing if the reference is in your personal library\n month: the month of the publication\n origyear: the original year of the publication\n shorttitleN_M: The first N (default: 3) words of the title, apply capitalization to first M (default: 0) of those\n shortyear: The last 2 digits of the publication year\n title: Capitalize all the significant words of the title, and concatenate them. For example, An awesome paper on JabRef will become AnAwesomePaperonJabref\n veryshorttitleN_M: The first N (default: 1) words of the title, apply capitalization to first M (default: 0) of those\n year: The year of the publication\n zotero: Generates citation keys as the stock Zotero Bib(La)TeX export does. Note that this pattern inherits all the problems of the original Zotero citekey generation \u0026ndash; you should really only use this if you have existing papers that rely on this behavior.\n 0: a pseudo-function that sets the citekey disambiguation postfix to numeric (-1, -2, etc, like the standard Zotero Bib(La)TeX translators do) rather than alphabetic (a, b, c). Does not add any text to the citekey otherwise.\n \u0026gt;X: a pseudo-function which aborts the current pattern generation if what came before it is X characters or less ([\u0026gt;0] is a typical use. You\u0026rsquo;d typically use this with something like [auth][\u0026gt;0][year]|[title][year] which means if there\u0026rsquo;s no author you get title-year rather than just year.\n =typeName: a pseudo-function that aborts the current pattern generation if the Zotero reference type does not equal typeName. You can test for multiple typenames at once by separating them with slashes ([=journalArticle/report]). Valid typeNames are: , artworkattachmentaudioRecordingbillblogPostbookbookSectioncaseclassic**computerProgramconferencePaperdictionaryEntrydocumentemailencyclopediaArticlefilmforumPostgazette**hearinginstantMessageinterviewjournalArticlelettermagazineArticlemanuscriptmapnewspaperArticlenotepatentpodcastpresentationradioBroadcastregulation**reportstandard**statutethesistreaty**tvBroadcastvideoRecordingwebpage.\n  Note: the functions above all have the clean filter (see below) automatically applied to them. If you want more control, auth, authIni, edtr, \u0026hellip; and all the author-related fields that mimic the JabRef equivalents also have capitalized versions (so Auth, AuthIni, Edtr, \u0026hellip;) which follow the same algorithm but do not have any cleaning (diacritic folding, space removal, stripping of invalid citekey characters) applied. These can be used to pass through the filters specified below much like the fields from the table above. See also \u0026ldquo;usage note\u0026rdquo; below. For all the non-author fields, you can use the reference fields directly. The possible fields are:\n  AbstractNote AccessDate AdoptionDate** ApplicationNumber   Archive ArchiveLocation ArtworkSize AssemblyNumber**   Assignee CallNumber Code CodeNumber   Committee ConferenceDate** ConferenceName Country   Court DOI Date DateAmended**   DocumentName** Edition Extra FilingDate   GazetteFlag** Genre** History ISBN   ISSN Institution** Issue IssuingAuthority   JournalAbbreviation Jurisdiction** Language LegalStatus   LegislativeBody LibraryCatalog Medium MeetingName   MeetingNumber** NewsCaseDate** NumPages Number   NumberOfVolumes OpeningDate** Opus** OriginalDate**   Pages ParentTreaty** Place PriorityDate**   PriorityNumbers ProgrammingLanguage PublicationDate** PublicationNumber**   PublicationTitle Publisher References RegnalYear**   Reign** Reporter ResolutionLabel** Rights   RunningTime Scale Section Series   SeriesNumber SeriesText SeriesTitle Session   ShortTitle SigningDate** Status** SupplementName**   System Title Type Url   VersionNumber Volume VolumeTitle** WebsiteTitle**   YearAsVolume**      (fields marked ** are only available in Juris-M).\nFlags  +initials adds initials to any author name function. Specify using e.g. [auth+initials]  Filters  abbr: Abbreviates the text. Only the first character and subsequent characters following white space will be included.\n alphanum: clears out everything but unicode alphanumeric characters (unicode character classes L and N)\n ascii: removes all non-ascii characters\n capitalize: uppercases the first letter of each word\n clean: transliterates the citation keys and removes unsafe characters\n condense: this replaces spaces in the value passed in. You can specify what to replace it with by adding it as a parameter, e.g condense=_ will replace spaces with underscores. Parameters should not contain spaces unless you want the spaces in the value passed in to be replaced with those spaces in the parameter\n fold: tries to replace diacritics with ascii look-alikes. Removes non-ascii characters it cannot match\n lower: Forces the text inserted by the field marker to be in lowercase. For example, [auth:lower] expands the last name of the first author in lowercase.\n nopunct: Removes punctuation\n nopunctordash: Removes punctuation and word-connecting dashes\n postfix: postfixes with its parameter, so postfix=_ will add an underscore to the end if, and only if, the value it is supposed to postfix isn\u0026#39;t empty\n prefix: prefixes with its parameter, so prefix=_ will add an underscore to the front if, and only if, the value it is supposed to prefix isn\u0026#39;t empty. If you want to use a reserved character (such as : or \\), you\u0026#39;ll need to add a backslash (\\) in front of it.\n replace: replaces text, case insensitive; :replace=.etal,\u0026amp;amp;etal will replace .EtAl with \u0026amp;amp;etal\n select: selects words from the value passed in. The format is select=start,number (1-based), so select=1,4 would select the first four words. If number is not given, all words from start to the end of the list are selected. It is important to note that select works only on values that have the words separated by whitespace, so the caveat below applies.\n skipwords: filters out common words like \u0026#39;of\u0026#39;, \u0026#39;the\u0026#39;, \u0026hellip; the list of words can be seen and changed by going into about:config under the key extensions.zotero.translators.better-bibtex.skipWords as a comma-separated, case-insensitive list of words.\n substring: (substring=start,n) selects n (default: all) characters starting at start (default: 1)\n upper: Forces the text inserted by the field marker to be in uppercase. For example, [auth:upper] expands the last name of the first author in uppercase.\n (x): The string between the parentheses will be inserted if the field marker preceding this modifier resolves to an empty value. The placeholder x may be any string. For instance, the marker [volume:(unknown)] will return the entry\u0026rsquo;s volume if set, and the string unknown if the entry\u0026rsquo;s volume field is not set.\n  Usage note: the functions condense, skipwords, capitalize and select rely on whitespaces for word handling. The JabRef functions strip whitespace and thereby make these filter functions sort of useless. You will in general want to use the fields from the table above, which give you the values from Zotero without any changes. The fields with ** are only available in Juris-M.\n"
},
{
	"uri": "/exporting/customized-exports/",
	"title": "Customized exports",
	"tags": [],
	"description": "",
	"content": " Better BibTex adds a couple of export formats to Zotero\u0026rsquo;s export dialog. The Better BibTeX configuration pane can be found under the regular Zotero preferences pane, tab \u0026lsquo;Better BibTeX\u0026rsquo;. Through the configuration pane of BBT you can customize the BibTeX file that will be exported:\n Automated background exports. Tick \u0026lsquo;keep updated\u0026rsquo; during export, and that\u0026rsquo;s that. Unicode conversion: the default is to retain unicode characters on export for BibLaTeX, and to convert to LaTeX commands (where possible) for BibTeX. You can specify whether you want to retain this default, or whether you want BBT to always export translating to LaTeX commands, or never to do this translation. Recursive collection export: when exporting a collection, recursive export will include all child collections. Note that this also sets Zotero to display collection contents recursively. Omit fields from export: Should you so wish, you can prevent fields of your choosing from being exported. In the configuration screen, add a comma-separated list of BibTeX fields you do not want to see in your export. The fields are case-sensitive, separated by a comma only, no spaces. Configurable citekey generator Push-and-Pull-Export: You can fetch your library as part of your build, using curl (for example by using the included zoterobib.yaml arara rule), or with a BiblaTeX remote statement like \\addbibresource[location=remote]{http://localhost:23119/better-bibtex/collection?/0/8CV58ZVD.biblatex}. Add other custom BibLaTeX fields  BBT http export uses the general Zotero HTTP facility; please note that disabling this will disable ALL HTTP facilities in Zotero \u0026ndash; including the non-Firefox plugins provided by Zotero.\nAdd your own BibLaTeX fields There are three alternative methods:\nSquare brackets [] You can add any field you like by using something like\nbibtex[origdate=1856;origtitle=An Old Title]  in the extra field of your reference. This format is very rigid, it has no quoting syntax, so you can\u0026rsquo;t have =, [, ] or ; in your key names or values.\nJSON5 If you need more flexibility, you can use the JSON5 format instead:\nbibtex{ origdate: 1856, origtitle: \u0026quot;Can contain = and ';' just fine\u0026quot; }  The marker for these fields can be either bibtex, biblatex or biblatexdata, but when importing BibTeX files with fields not supported by Zotero, the bibtex marker will be used. These fields are assumed to be valid LaTeX, and will be exported exactly as entered.\nIf you want to have them LaTeX encoded, add an asterisk (*) after the marker, so something like\nbibtex*{ origdate: 1856, origtitle: \u0026quot;Things like _ and $ will be escaped\u0026quot; }  CSL fields The final way to add fields is by using CSL fields in the format {:original-date: 1856}. These fields will not only be exported to Bib(La)TeX, but will also be picked up by the Zotero Bibliography manager, even though not all Zotero styles yet support this.\nCommon notes If you add a field called referencetype using either of these methods, that value will be used as the reference type instead of the one usually inferred from the Zotero reference type. You can use this to create, for example, @customa{citekeyhere, ....} type references.\nYou can fix the citation key for a reference to a value of your choosing by adding the text bibtex: [your citekey] anywhere in the \u0026ldquo;extra\u0026rdquo; field of the reference.\nNote that the default biblatex styles do not seem to support origdate; you can find possible solutions for this at Stack Exchange here and here.\nYou wanted customized\u0026hellip; You got customized. If you go into the Advanced preferences of BBT, find an edit field labeled Postscript, empty by default. In this, you can paste a JavaScript snippet which will be executed for each reference generated in the Bib(La)TeX exporter. In this code, you have access to the reference just before it will be written out and cached. Examples and the documentation-in-progress for the script environment can be found here; feel free to add your own examples.\n"
},
{
	"uri": "/exporting/scripting/",
	"title": "Scripting",
	"tags": [],
	"description": "",
	"content": " You wanted customized\u0026hellip; You got customized. If you go into the Advanced tab of the Better BibTeX preferences you will find a text box (empty by default) where you can edit a javascript snippet which will be executed for each reference generated in the Bib(La)TeX exporter. In this code, you have access to the reference just before it will be written out and cached. There is an API to do this, and it\u0026rsquo;s fairly stable, but usually you can just open a new issue and ask me to write it, and I\u0026rsquo;ll add it here (it\u0026rsquo;s how the examples got here). Postscripts are available in 4 of the translators:\n BetterBibLaTeX BetterBibTeX BetterCSLJSON BetterCSLYAML  You can (and totally should) check in which translator your postscript is running, which you can do by testing for Translator.\u0026lt;id\u0026gt; where \u0026lt;id\u0026gt; is one of these four names, using something like\nif (Translator.BetterBibLaTeX) { ... }  or alternately on the full name using a switch\nswitch (Translator.header.label) { case 'Better BibLaTeX': ... break; case 'Better BibTeX': ... break; case 'Better CSL JSON': ... break; case 'Better CSL YAML': ... break; }  If you want to run a postscript in the CSL translators but don\u0026rsquo;t care whether it will output YAML or JSON, you can test for Translator.BetterCSL, which will be true when either one of BetterCSLJSON or BetterCSLYAML is active.\nIn the BetterBib(La)TeX context you will typically access this, which will be undefined in the BetterCSL(JSON|YAML) context. In the BetterBib(La)TeX context, your Bib(La)TeX reference being built is available as both this and reference; the source Zotero item is available both as item (and this.item for historic reasons). In the BetterCSL(JSON|YAML) context, the CSL object being built is available as reference and the the source Zotero item is available as item.\nYou should really test for the translator context in your postscripts. If you don\u0026rsquo;t because you have a postscript that pre-date CSL support, you will probably be using this.\u0026lt;something\u0026gt; in your existing postscripts, which will make the script will non-fatally error out. So you\u0026rsquo;re very probably good to go as-is. But please fix your postscripts to test for the translator context.\nThe API (for the Better Bib(La)TeX context) The postscript should be a javascript snippet. You can access the data with following objects or functions.\nIn BetterBibLaTeX and BetterBibTeX,\n this is the BibTeX reference you are building, and the reference has a number of fields. this.fields item (or as mentioned earlier, this.item) is the Zotero item that\u0026rsquo;s the source of the reference.  e.g. access the date in zotero item item.date.\n this.has is a dictionary of fields for output.  e.g. access the year in output this.has.year\n this.add is the function to add or modify keys in this.has. It will check check for unintentional duplicates (unless you specify explicitly with replace: true).  e.g. change the value of year in output this.add({name: 'year', replace: true, value: your_year_value})\nIn BetterCSLJSON and BetterCSLYAML:\n reference is the CSL object being built. Any changes made to this object will directly change the CSL object being output. item is the Zotero reference it\u0026rsquo;s being built from.  Samples Add accessdate, url for BibTeX Since BibTeX doesn\u0026rsquo;t really have well-defined behavior across styles the way BibLaTeX does, BBT can\u0026rsquo;t generate URL data which is compatible with all BibTeX styles. If you know the style you use yourself, you can add the data in the format you want using a postscript. The script below will add a note for the last accessed date, and a \\url tag within the howpublished field, but only for BibTeX, not for BibLaTeX, and only for webpage entries:\nif (Translator.BetterBibTeX \u0026amp;\u0026amp; item.itemType === 'webpage') { if (item.accessDate) { this.add({ name: 'note', value: \u0026quot;(accessed \u0026quot; + item.accessDate + \u0026quot;)\u0026quot; }); } if (item.url) { this.add({ name: 'howpublished', bibtex: \u0026quot;{\\\\url{\u0026quot; + this.enc_verbatim({value: item.url}) + \u0026quot;}}\u0026quot; }); } }  Comma\u0026rsquo;s in keywords If you want to retain commas in your keywords (e.g. for chemical elements) and separate with a comma-space, you could do:\nif (Translator.BetterBibTeX || Translator.BetterBibLaTeX) { this.add({ name: 'keywords', replace: true, value: item.tags, sep: ', ' }); }  as the default encoder knows what to do with arrays, if you give it a separator.\nAdd DOI in note field if ((Translator.BetterBibTeX || Translator.BetterBibLaTeX) \u0026amp;\u0026amp; item.DOI) { var doi = item.DOI; if (doi.indexOf('doi:') != 0) { doi = 'doi:' + doi; } this.add({ name: 'note', duplicate: true, value: '[' + doi + ']' }); }  Add arXiv data arXiv is a bit of an odd duck. It really isn\u0026rsquo;t a journal, so it shouldn\u0026rsquo;t be the journal title, and their own recommendations on how to include arXiv IDs is a little lacking: this doesn\u0026rsquo;t say where to include the arXiv:... identfier, and this says not to include it. Nor does it give any recommendations on how to achieve the desired output.\nBut for arguments\u0026rsquo; sake, let\u0026rsquo;s say you get the desired output by including an empty journaltitle field (ugh) and stuff the arXiv:... ID in the pages field (ugh). You could do that with the following postscript:\nif ((Translator.BetterBibTeX || Translator.BetterBibLaTeX) \u0026amp;\u0026amp; item.arXiv.id) { this.add({ name: 'pages', value: item.arXiv.id }); if (!this.has.journaltitle) { this.add({ name: 'journaltitle', bibtex: '{}' }); } }  Custom field order Specify the ordering of the listing of fields in an exported Biblatex/Bibtex entry. Your postscript:\nif (Translator.BetterTeX) { // the bib(la)tex fields are ordered according to this array. // If a field is not in this list, it will show up at the end in random order. // https://github.com/retorquere/zotero-better-bibtex/issues/512 const order = ['author', 'date', 'title', 'publisher']; const keys = Object.keys(this.has) for (const field of keys.sort((a, b) =\u0026gt; ((order.indexOf(a) + 1) || (keys.length + order.length + 1)) - ((order.indexOf(b) + 1) || (keys.length + order.length + 1)))) { const value = this.has[field] delete this.has[field] this.has[field] = value } }  In Zotero when using an Export Format of Better Biblatex we\u0026rsquo;ll get something like the following entry \u0026hellip;\n@book{nietzsche_1974_gay, author = {Nietzsche, Friedrich Wilhelm}, date = {1974-03}, origdate = {1882}, shorthand = {GS}, title = {The {{Gay Science}}: {{With}} a {{Prelude}} in {{Rhymes}} and an {{Appendix}} of {{Songs}}}, keywords = {Philosophy / General,Philosophy / History Surveys / Modern}, translator = {Kaufmann, Walter}, publisher = {{Random House}}, timestamp = {2016-06-05T20:12:28Z}, pagetotal = {407}, shorttitle = {The {{Gay Science}}}, isbn = {0-394-71985-9}, edition = {1} }  Further details Export to Biblatex/Bibtex. Custom field order. #512.\nDetect and protect LaTeX math formulas if (Translator.BetterBibTeX \u0026amp;\u0026amp; this.has.title) { this.add({ name: 'title', value: item.title.replace(/(\\$.*?\\$)/g, '\u0026lt;script\u0026gt;$1\u0026lt;/script\u0026gt;'), replace: true }); }  Replace director with author for videoRecording and film references if (Translator.BetterBibLaTeX) { switch (item.itemType) { case 'videoRecording': case 'film': item.creators.forEach(creator =\u0026gt; { if (creator.creatorType === 'director') creator.creatorType = 'author' }) this.addCreators(); break; } }  Changing the reference type from collection to book if (Translator.BetterBibLaTeX) { if (this.referencetype === 'collection') this.referencetype = 'book' }  "
},
{
	"uri": "/support/",
	"title": "Support",
	"tags": [],
	"description": "",
	"content": " Before all else, thank you for taking the time for submitting an issue, and I\u0026rsquo;m sorry that I\u0026rsquo;ve probably interrupted your flow.\nYour report matters to me. I love hearing my software helps you, and it pains me to know that things aren\u0026rsquo;t working for you.\nIf you have any questions on the use of the plugin, please do not hesitate to file a GitHub issue to ask for help.\nIf you\u0026rsquo;re reporting a bug in the plugin, please take a moment to glance through the Support Request Guidelines below; it will make sure I get your problem fixed as quick as possible. The guidelines are very detailed, perhaps to the point of being off-putting, but please do not fret; these guidelines simply express my ideal bug submission. I of course prefer very clearly documented issue reports over fuzzy ones, but I prefer fuzzy ones over missed ones.\nSubmitting an issue You can report problems with BBT by opening a new issue on github. Unfortunately, my time is extremely limited for a number of very great reasons (you shall have to trust me on this). Because of this, I cannot accept bug reports or support requests on anything but the latest version. By the time I get to your issue, the latest version might have bumped up already, and you will have to upgrade (you might have auto-upgraded already however) and re-verify that your issue still exists. Apologies for the inconvenience, but such are the breaks.\n You can send off an error report by selecting Report Better BibTeX Errors from the Help menu. Post the resulting ID (displayed in red) in a github issue. You can send off an error report for a specific collection or (selection of) items that fails to export by selecting those, right-clicking and choosing Report Better BibTeX Errors  That in itself will in many cases give me what I need. Don\u0026rsquo;t forget to copy the generated ID to paste it into the github issue; you cannot call it up later (although you can just do it again).\nFor the fastest fix:\n Please include specifics of what doesn\u0026rsquo;t work. I use this plugin every day myself, so \u0026ldquo;it doesn\u0026rsquo;t work\u0026rdquo; is trivially false. Please tell me what you expected and what you see happening, and the relevant difference between them. Please don\u0026rsquo;t file a jumble of problems in one issue. Posting a slew of separate issues is much preferred, as I can more easily tackle them one by one. Do not hijack existing issues. You can chime in on existing issues if you\u0026rsquo;re close to certain it is the same problem, otherwise, open a new issue. I rather have duplicate issues than issues I cannot close because they are in fact two or more issues. If your problem pertains to importing BibTeX files, you must put up a sample for me to reproduce the issue with. Do not paste the sample in the issue, as the issue tracker will format it into oblivion. Instead, choose one of these options:  Post an URL in the issue where I can download your sample, or Put the sample in a gist and post the URL of the gist into the issue  If your problem pertains to BBT interfering with other plugins (which wouldn\u0026rsquo;t be the first time), and this interference has something to do with importing, you must include a sample file that triggers the issue. I know it may seem that \u0026ldquo;any file triggers it\u0026rdquo; \u0026ndash; I need a specific file that does so I know we\u0026rsquo;re looking at the same problem.  Known problems  If Zotero stalls after installing BBT, it is often a one-time thing as the cache fills.  "
},
{
	"uri": "/exporting/advanced/",
	"title": "Advanced",
	"tags": [],
	"description": "",
	"content": " You are a hardcore LaTeX user If you\u0026rsquo;d really just rather hand-code your LaTeX constructs, BBT makes that possible:\n You can add literal LaTeX anywhere in your reference by surrounding it with \u0026lt;pre\u0026gt;....\u0026lt;/pre\u0026gt; tags. BBT will convert to/from unicode and (un)escape where required but will pass whatever is enclosed in the pre tags unchanged. An entry tagged with #LaTeX (case-sensitive!) will have all fields exported as if they\u0026rsquo;re wrapped in \u0026lt;pre\u0026gt;...\u0026lt;/pre\u0026gt;, so you can include LaTeX markup in your references.   Gotchas  In names, you can force first names like Philippe to be exported to {\\relax Ph}ilippe (which causes it to get initial Ph. rather than P. in styles that do initials) by adding a end of guarded area character between Ph and ilippe.  "
},
{
	"uri": "/",
	"title": "Better BibTeX for Zotero",
	"tags": [],
	"description": "",
	"content": " This extension aims to make Zotero (and soon Juris-M) effective for us text-based authoring holdouts; currently, that translates to the LaTeX/Markdown crowd. To get started, read the Installation instructions. At its core, it behaves like any Zotero import/export module; anywhere you can export or import bibliography items in Zotero, you\u0026rsquo;ll find Better X listed among the choices. If nothing else, you could keep your existing workflow as-is, and just enjoy the improved LaTeX \u0026harr; unicode translation on import and export and more accurate field mapping.\nZotero does all its work in UTF-8 Unicode, which is absolutely the right thing to do. Unfortunately, for those shackled to BibTeX and who cannot (yet) move to BibLaTeX, unicode is a major PITA. Also, Zotero supports some simple HTML markup in your references that Bib(La)TeX won\u0026rsquo;t understand.\nBBT will convert from/to HTML/LaTeX; Currently supports \u0026lt;i\u0026gt;\u0026#8660;\\emph \u0026amp; \\textit, \u0026lt;b\u0026gt;\u0026#8660;\\textbf, \u0026lt;sub\u0026gt;\u0026#8660;_{\u0026hellip;}, \u0026lt;sup\u0026gt;\u0026#8660;^{\u0026hellip;} and \u0026lt;sc\u0026gt;\u0026#8660;\\textsc{\u0026hellip;}; more can be added on request. BBT contains a comprehensive list of LaTeX constructs, so stuff like \\\u0026quot;{o} or \\\u0026quot;o will be converted to their unicode equivalents on import, and their unicode equivalents back to \\\u0026quot;{o} if you have that option enabled (but you don\u0026rsquo;t have to if you use BibLaTeX, which has fairly good Unicode support). With BBT you\u0026rsquo;ll have:\n Stable Citation Keys, without key clashes! Generates citation keys that take into account other existing keys in your library that are not part of the items you export. Prevent random breakage! Converts from/to HTML/LaTeX: Currently supports \u0026lt;i\u0026gt;...\u0026lt;/i\u0026gt;/\\emph{...}/\\textit{...}, \u0026lt;b\u0026gt;...\u0026lt;/b\u0026gt;/\\textbf{...}, \u0026lt;sup\u0026gt;...\u0026lt;/sup\u0026gt;/\\_{...} and \u0026lt;sub\u0026gt;...\u0026lt;/sub\u0026gt;/^{...}. The plugin contains a comprehensive list of LaTeX constructs, so stuff like \\\u0026quot;{o} or \\\u0026quot;o will be converted to their unicode equivalents on import (e.g., \\\u0026quot;{o} to ö). If you need literal LaTeX in your export: surround it with \u0026lt;pre\u0026gt;\u0026hellip;\u0026lt;/pre\u0026gt; tags. Set your own, fixed Citation Keys, generate citation keys from JabRef patterns, drag and drop LaTeX citations, add other custom BibLaTeX fields. Highly Customized Exports. Fixes date field exports: export dates like \u0026lsquo;forthcoming\u0026rsquo; as \u0026lsquo;forthcoming\u0026rsquo; instead of empty, but normalize valid dates to unambiguous international format. Push/Pull Export from the embedded webserver. Automatic journal abbreviation.  Better BibTeX works from BibTeXing and Tame the BeaST for BibTeX, and The Biblatex Package for BibLaTeX, but since there isn\u0026rsquo;t really a definitive manual for either format that is universally followed by Bib(La)TeX editors/processors, I\u0026rsquo;m pragmatic about implementing what works.\nGot problems? We got fixes! If you have any questions on the use of the plugin, please do not hesitate to file a GitHub issue to ask for help. If you\u0026rsquo;re reporting a bug in the plugin, please take a moment to glance through the Support Request Guidelines; it will make sure I get your problem fixed as quick as possible. Clear bug reports commonly have really short time-to-fix, so if you report something, stick around \u0026ndash; it may be done as you wait. The support request guidelines are very detailed, perhaps to the point of being off-putting, but please do not fret; these guidelines simply express my ideal bug submission. I of course prefer very clearly documented issue reports over fuzzy ones, but I prefer fuzzy ones over missed ones.\n"
},
{
	"uri": "/better-bibtex/configuration/",
	"title": "Configuration",
	"tags": [],
	"description": "",
	"content": "The Better BibTeX Configuration can be found under the regular Zotero preferences pane, tab \u0026lsquo;Better BibTeX\u0026rsquo;.\nThe configuration of Better BibTeX is a little baroque compared to the standard Zotero Bib(La)TeX exporters (which only have hidden preferences). The defaults should just work, but here\u0026rsquo;s an attempt to describe what they do.\nMaking any change here will drop your entire export cache. This is usually not a problem unless you have a really large library, but you can read about what is involved here.\n"
},
{
	"uri": "/better-bibtex/configuration/citation-keys/",
	"title": "Citation keys",
	"tags": [],
	"description": "",
	"content": " Citation key format default: ​[auth:lower][shorttitle3_3][year]\nSet the pattern used to generate citation keys. The format of the keys is documented here.\nForce citation key to plain text default: True\nIf you have deviated from the default citation key format pattern by specifying your own, you may wind up with non-ASCII characters in your citation keys. You can prevent that using the fold function at the appropriate place in your pattern, but checking this checkbox will just apply fold to all your keys.\nKeep keys unique default: within each library\nAuto-generated (non-pinned) keys automatically get a postfix when they would generate a duplicate. By default, the check for duplicates is restricted to the library/group the item lives in. When set to global, the check will include all libraries/groups, so auto-generated keys would be globally unique. Changing this setting does not affect existign keys - for this you would need to select the items and refresh the keys.\nOptions:\n across all libraries within each library  On conflict with a pinned key, non-pinned keys will be default: kept (causes key duplicates)\nThis determines what happens if you pin a key to a value that is already in use in a different reference but not pinned there. Neither are ideal, you just get to pick your poison. If you let BBT change the non-pinned key by adding a postfix character, the citation key changes which could be problematic for existing papers. If you keep the non-pinned key as-is, your library now has duplicate keys.\nOptions:\n postfixed (causes key changes) kept (causes key duplicates)  QuickCopy format default: LaTeX\nUsed for drag-and-drop/quick copy using Better BibTeX citekeys. In the Zotero \u0026ldquo;Export\u0026rdquo; pane, choose Better BibTeX Quick Copy as the default export format for quick copy, and choose the desired format for the drag-and-drop citations here.\nOptions:\n LaTeX Cite Keys Pandoc Org-mode (citekey) Org-mode (item ID) org-ref RTF Scan Atom (https://atom.io/packages/zotero-citations) GitBook Select link (citekey) Select link (item ID)  LaTeX command default: cite\nUsed for drag-and-drop/quick copy citations in LaTeX format. Set the desired LaTeX citation command here. If you set this to citep, drag-and-drop citations will yield \\citep{key1,key2,...}\nSurround Pandoc citations with brackets default: False\nUsed for drag-and-drop/quick copy citations in Pandoc format. You can use this option to select whether you want to have these pandoc citations surrounded with brackets or not.\nWhen scanning an AUX file, attempt to import references from the attached bib file when their citation keys are not in Zotero default: False\nBy default, when scanning for cited items in the aux file, BBT will just generate a note listing all citation keys it cannot find in Zotero. When this option is turned on, BBT will attempt to import such missing items from the bib file that the AUX file being scanned points to.\n"
},
{
	"uri": "/better-bibtex/configuration/export/",
	"title": "Export",
	"tags": [],
	"description": "",
	"content": " Export unicode as plain-text latex commands (recommended) default: True\n* BibTeX has really spotty Unicode support, so you generally want this on. It will translate things like accented characters to their equivalent LaTeX constructs on export.\nDisregard name prefixes when sorting default: False\n* Name handling is a lot more complex than I had ever thought it to be. A lot more complex. BibTeX has really limited ways of dealing with names with particles (van, von, de, etc). If you turn this on, BBT will add code to have van Gogh sorted under Gogh.\nAdd URLs to BibTeX export default: no\n* BibLaTeX supports urls in your references natively; BibTeX does not. For this reason, URLs are omitted from BibTeX exports by default. Using this setting you can have them added to your exports either in a note field (not as clean, but compatible with BibTeX out of the box), or in a url field (requires extra packages to be loaded, or bibtex will error out).\nOptions:\n no in a note field in a URL field (requires custom style for url field support)  Export unicode as plain-text latex commands default: False\n* BibLaTeX actually has really good Unicode support, so you generally want this off. But for some geezers such as me it is simply more pleasing to have things like accented characters translated to their equivalent LaTeX constructs on export.\nUse BibLaTeX extended name format (requires biblatex 3.5) default: False\n* Use the extended biber 2.7 format for names with particles - only works in BibLaTeX 3.5 or later. This biblatex has a new (less ambiguous) way to store creator names. It\u0026rsquo;s technically superior, but the LaTeX world moves slowly, so many people won\u0026rsquo;t have it yet. But if you\u0026rsquo;re an early adopter, you can enable it here\nWhen a reference has both a DOI and a URL, export default: both\n* Does what it says on the tin, really. If a reference has both a DOI and an URL, you can choose to have them both exported, or either one of them.\nOptions:\n both DOI URL  Fields to omit from export (comma-separated) default: \u0026lt;not set\u0026gt;\nIf there are some fields you don\u0026rsquo;t want in your bibtex files (such as note for example), add a list of them here, separated by comma\u0026rsquo;s.\nInclude JabRef-specific metadata default: no\nExport JabRef-specific information fields; timetamps and groups for collections. Note that format \u0026ldquo;4\u0026rdquo; will disable caching in exports, which is really undesirable specifically for auto-exports.\nOptions:\n no for JabRef 3 for JabRef 4  Include comments about potential problems with the references default: False\n* Generate quality reports for exported references.\nAutomatically abbreviate journal title if none is set explicitly default: False\nIf set, generates journal abbreviations on export using the Zotero journal abbreviator, according to the abbreviation style selected in the list below the checkbox.\nAbbreviation style default: \u0026lt;not set\u0026gt;\nSelect the style for auto-abbreviation. Only applicable to Juris-M; in Zotero, the style for automatic abbreviation is not configurable.\n"
},
{
	"uri": "/better-bibtex/configuration/automatic-export/",
	"title": "Automatic export",
	"tags": [],
	"description": "",
	"content": " Automatic export default: On Change\nDetermines when automatic exports are kicked off. Having it disabled still marks auto-exports as needing updates, so when you re-enable it, those exports will start. On-change means exports happen whenever a reference in the export changes/is added/is removed. On idle does more or less what Disabled (that is, no exports but mark as needing changes), but will kick off exports when your computer is idle. You mostly want this if your computer is performance-constrained (aka slow).\nOptions:\n Disabled On Change When Idle  "
},
{
	"uri": "/better-bibtex/configuration/advanced/",
	"title": "Advanced",
	"tags": [],
	"description": "",
	"content": " Deterministically order references and fields; primarily for version control. default: False\nWhen on, BBT will deterministically order references on export. This is primarily interesting if you keep the exported file under some kind of version control. Comes at performance and memory consumption cost.\npostscript default: \u0026lt;not set\u0026gt;\nSnippet of javascript to run after each reference generation.\n@string definitions default: \u0026lt;not set\u0026gt;\nIf you have externally maintained @string vars paste them here and they will be resolved for subsequent imports\nExpand the @string vars below during imports default: True\nWhen enabled, BBT will prepend the @strings section below to all Bib(La)TeX imports and will expand the strings during export.\nIf a field could be a @string var, export it without braces default: No\nWhen enabled, BBT will try to retain @string vars its exports unsurrounded by braces; when set to \u0026lsquo;detect\u0026rsquo;, single-word strings will be assumed to be externally-defined @string vars, when set to \u0026lsquo;match\u0026rsquo;, only @strings declared in the @strings section of the preferences will be preserved. If you don\u0026rsquo;t know what this means, leave it off.\nOptions:\n No Assume single-word fields to be @string vars Match against the @string vars below  Warn me when changing citation keys in bulk default: 10\nFor those who are curious about what the \u0026ldquo;Clear/Generate BibTeX key\u0026rdquo; right-click options do, this will warn you if you are doing this on more than 10 (default) at the same time, to prevent your curiosity from changing all your citation keys at once.\nWarn me when auto-exports take longer than (seconds) default: 10\nIf you have auto-export set up for a large library, Zotero might freeze for during exports. There is nothing I can do about this; caching helps, but all Zotero exports freeze Zotero while they are running. BBT will warn you if it sees a long-running auto-export to suggest running it only when Zotero goes idle.\n"
},
{
	"uri": "/better-bibtex/configuration/hidden-preferences/",
	"title": "Hidden preferences",
	"tags": [],
	"description": "",
	"content": " The following settings are not exposed in the UI, but can be found under Preferences/Advanced/Config editor.\nAll are prefixed with extensions.zotero.translators.better-bibtex. in the table you will find there\nascii default: \u0026lt;not set\u0026gt;\nIf you have unicode turned on you can still selectively replace some characters to plain-text commands; any characters entered here will always be replaced by their LaTeX-command counterparts.\nautoExportIdleWait default: 10\nNumber of seconds to wait after your system goes idle before kicking off auto-exports.\ncacheFlushInterval default: 5\nHow often the Better BibTeX database should be saved to disk. Defaults to once every 5 seconds. Note that your database is always saved when your computer goes idle, or when you exit Zotero.\ncsquotes default: \u0026lt;not set\u0026gt;\nif you set csquotes to a string of character pairs, each pair will be assumed to be the open and close parts of a pair and will be replaced with a \\\\enquote{...} construct.\nrawLaTag default: #LaTeX\nWhen an item has this tag, all its fields will be assumed to hold raw LaTeX and will undergo no further transformation. If you set this to \u0026lsquo;*\u0026lsquo;, all items will be assumed to have raw LaTeX.\nskipWords default: a,ab,aboard,about,above,across,after,against,al,along,amid,among,an,and,anti,around,as,at,before,behind,below,beneath,beside,besides,between,beyond,but,by,d,da,das,de,del,dell,dello,dei,degli,della,dell,delle,dem,den,der,des,despite,die,do,down,du,during,ein,eine,einem,einen,einer,eines,el,en,et,except,for,from,gli,i,il,in,inside,into,is,l,la,las,le,les,like,lo,los,near,nor,of,off,on,onto,or,over,past,per,plus,round,save,since,so,some,sur,than,the,through,to,toward,towards,un,una,unas,under,underneath,une,unlike,uno,unos,until,up,upon,versus,via,von,while,with,within,without,yet,zu,zum\nlist of words to skip in title when generating citation keys\nbiblatexExtendedDateFormat default: True\nSupport for EDTF dates in biblatex\nsuppressTitleCase default: False\nIf you\u0026rsquo;re dead-set on ignoring both BibTeX/BibLaTeX best practice and the Zotero recommendations on title/sentence casing, set this preference to \u0026ldquo;true\u0026rdquo; to suppress title casing for English references.\nsuppressBraceProtection default: False\nIf you\u0026rsquo;re dead-set on ignoring both BibTeX/BibLaTeX best practice and the Zotero recommendations on title/sentence casing, set this preference to \u0026ldquo;true\u0026rdquo; to suppress automatic brace-protection for words with uppercase letters.\nautoExportDelay default: 1\nIf you have auto-exports set up, BBT will wait this many seconds before actually kicking off the exports to buffer multiple changes in quick succession setting off an unreasonable number of auto-exports. Minimum is 1 second. Changes to this preference take effect after restarting Zotero.\nitemObserverDelay default: 100\nI\u0026rsquo;ve had reports where Zotero notifies extensions that references have changed, but if BBT then actually retrieves those same references, Zotero complains they \u0026ldquo;haven\u0026rsquo;t been saved yet\u0026rdquo;. Super. This preference sets the number of microseconds BBT should wait after being notified before acting on the changed references.\nparseParticles default: True\nName particle handling\nciteprocNoteCitekey default: False\nReplaces the \u0026ldquo;note\u0026rdquo; field with the bibtex key during citation rendering in Word/Libreoffice. Main use-case is to help migrating word documents to pandoc. This setting only takes effect during startup, so if you change it, you will have to restart Zotero to have this take effect (or to disable it. Please disable it when done). You will want to use a custom CSL style (such as this) to make this work.\nscrubDatabase default: False\nFinds potential problems in the database and fixes those. This runs extremely slow at startup, don\u0026rsquo;t unable this unless explicitly asked to.\nlockedInit default: False\nBBT locks the UI during startup because I have been told in no uncertain terms I am not to touch the Zotero database before I get an all-clear from Zotero. This all-clear takes a fair amount of time. As BBT needs database access for generating keys, and everything in BBT depends on the keys being present, it is absolutely safest to make sure BBT initialization has completed before freeing the UI. I want to stress that during most of the lock-time, BBT is simply waiting for Zotero to complete its own initialization; try to do an export of any kind (not just BBT) or to import new references directly after Zotero has started and you\u0026rsquo;ll notice that it may take a while before Zotero reacts. The lockout just puts a face on this hidden init, and prevents nasty race conditions between the BBT and Zotero initialization leading to unpredictable breakage occasionally.\nIf you however cannot stand the lockout during startup and you want to live dangerously, you can turn this off and hope that no race conditions bite you. If you turn this on and experience problems, you are welcome to file a bug report and I will see what I can do, but be prepared for the answer to be \u0026ldquo;turn this back on for now\u0026rdquo;.\nThis is EXPERIMENTAL and this preference may disappear at any moment without notice.\nautoPin default: False\nWhen on, BBT will automatically pin the first citekey it generates for an item.\nkuroshiro default: False\nWhen on, BBT will load kuroshiro for romajization in citekeys. This uses a lot of memory, easily 100MB. If you don\u0026rsquo;t have Japanese titles/names, keep this off.\nautoExportPrimeExportCacheThreshold default: 0\nIf an auto-export is triggered and there are more than autoExportPrimeExportCacheThreshold un-cached entries, prime the cache before starting the auto-export. This makes the export take longer in total, but since exports in Zotero lock up the UI, priming helps making the actual export run as fast as possible. Really only useful for large exports, but what counts as large is system-dependent, so you can play with this value. The default of 0 disables priming. This is a temporary measure until https://groups.google.com/d/msg/zotero-dev/lHYEtdgPHCE/nDUyxpFmAgAJ is implemented in Zotero.\nautoExportPrimeExportCacheBatch default: 4\nIf cache priming is kicked off (see autoExportPrimeExportCacheThreshold), the cache will be primed in batches of autoExportPrimeExportCacheBatch. The lower this number is, the longer the priming will take (there\u0026rsquo;s a fixed per-prime overhead), but (since the priming uses exports under the hood) the larger it is, the longer the priming actions will lock the UI.\nautoExportPrimeExportCacheDelay default: 100\nCache priming (see autoExportPrimeExportCacheThreshold), happens in a tight loop, which will still make Zotero sluggish while the priming runs. By default, BBT will wait a tenths of a second between prime batches;- longer waits mean a more responsive Zotero during the priming, but the priming will take longer to complete.\nrelativeFilePaths default: False\nWhen exporting a Bib(La)TeX file, if the attachments are stored anywhere under the directory the bibliography is exported to, use relative paths to those attachments. Caching is disabled when this option is on, so it affects performance.\ngit default: config\nCan be \u0026lsquo;off\u0026rsquo;, \u0026lsquo;config\u0026rsquo; or \u0026lsquo;always\u0026rsquo;\n"
},
{
	"uri": "/better-bibtex/bundled-translators/",
	"title": "Bundled translators",
	"tags": [],
	"description": "Zotero import/export translators bundled with BBT",
	"content": " Better BibTeX bundles 5 translators you might care about:\nExport These translators are supported by the auto-export functionality built into Better BibTeX:\n Better BibLaTeX exports references in BibLaTeX format (but better, natch) Better BibTeX exports references in BibTeX format Better CSL JSON exports references in pandoc-compatible CSL-JSON format, with added citation keys and parsing of metadata Better CSL YAML exports the same as the Better CSL JSON exporter, but in YAML format Collected Notes exports just notes \u0026ndash; standalone notes and notes attached to references, not the extra field \u0026ndash; to HTML. This way, Zotero can serve as a (very) simple research notebook.  Import  Better BibTeX exports and imports references in Bib(La)TeX format  Included, but you should usually ignore it. I would hide these if I could. They\u0026rsquo;re used for Zotero\u0026rsquo;s drag-and-drop citation facility, and for Better BibTeX debugging.\n BetterBibTeX JSON exports and imports references in BetterBibTeX debug format. The error reporter uses this format Better BibTeX Quick Copy exports citations to be copy-pasted into your LaTeX/Markdown document in the form \\cite{\u0026lt; key \u0026gt;}/[@key]  "
},
{
	"uri": "/test/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " HTML Citation keys\n\u0026lt;h3\u0026gt;Citation key format\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;​[auth:lower][shorttitle3_3][year]\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Set the pattern used to generate citation keys. The format of the keys is documented \u0026lt;a href=\u0026quot;citation-keys\u0026quot;\u0026gt;here\u0026lt;/a\u0026gt;.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Force citation key to plain text\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;True\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;If you have deviated from the default citation key format pattern by \u0026lt;a href=\u0026quot;citation-keys\u0026quot;\u0026gt;specifying your own\u0026lt;/a\u0026gt;, you may  wind up with non-ASCII characters in your citation keys. You can prevent that using the fold function at the appropriate place in your pattern, but checking this checkbox will just apply fold to all your keys.\n\u0026lt;h3\u0026gt;Keep keys unique\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;within each library\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Auto-generated (non-pinned) keys automatically get a postfix when they would generate a duplicate. By default, the check for duplicates is restricted to the library/group the item lives in. When set to global, the check will include all libraries/groups, so auto-generated keys would be globally unique. Changing this setting \u0026lt;em\u0026gt;does not\u0026lt;/em\u0026gt; affect existign keys - for this you would need to select the items and refresh the keys.\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Options: \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;across all libraries\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;within each library\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;LaTeX command\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;cite\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Used for drag-and-drop/quick copy citations in \u0026lt;code\u0026gt;LaTeX\u0026lt;/code\u0026gt; format. Set the desired LaTeX citation command here. If you set this to \u0026lt;code\u0026gt;citep\u0026lt;/code\u0026gt;, drag-and-drop citations will yield  \\citep{key1,key2,\u0026hellip;}\n\u0026lt;h3\u0026gt;On conflict with a pinned key, non-pinned keys will be\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;kept (causes key duplicates)\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;This determines what happens if you pin a key to a value that is already in use in a different reference but not pinned there. Neither are ideal, you just get to pick your poison. If you let BBT change the non-pinned key by adding a postfix character, the citation key changes which could be problematic for existing papers. If you keep the non-pinned key as-is, your library now has duplicate keys.\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Options: \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;postfixed (causes key changes)\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;kept (causes key duplicates)\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;QuickCopy format\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;LaTeX\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Used for drag-and-drop/quick copy using Better BibTeX citekeys. In the Zotero \u0026amp;ldquo;Export\u0026amp;rdquo; pane, choose \u0026lt;code\u0026gt;Better BibTeX Quick Copy\u0026lt;/code\u0026gt; as the default export format for quick copy,  and choose the desired format for the drag-and-drop citations here.\n \u0026lt;p\u0026gt;Options: \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;LaTeX\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Cite Keys\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Pandoc\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Org-mode (citekey)\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Org-mode (item ID)\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;org-ref\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;RTF Scan\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Atom (\u0026lt;a href=\u0026quot;https://atom.io/packages/zotero-citations\u0026quot;\u0026gt;https://atom.io/packages/zotero-citations\u0026lt;/a\u0026gt;)\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;GitBook\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Select link (citekey)\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Select link (item ID)\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Surround Pandoc citations with brackets\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Used for drag-and-drop/quick copy citations in \u0026lt;code\u0026gt;Pandoc\u0026lt;/code\u0026gt; format. You can use this option to select whether you want to have these pandoc citations surrounded with brackets or not.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;When scanning an AUX file, attempt to import references from the attached bib file when their citation keys are not in Zotero\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;By default, when scanning for cited items in the aux file, BBT will just generate a note listing all citation keys it cannot find in Zotero. When this option is turned on, BBT will attempt to import such missing items from the bib file that the AUX file being scanned points to.\u0026lt;/p\u0026gt;  Export\n\u0026lt;h3\u0026gt;Abbreviation style\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Select the style for auto-abbreviation. Only applicable to Juris-M; in Zotero, the style for automatic  abbreviation is not configurable.\n\u0026lt;h3\u0026gt;Add URLs to BibTeX export\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;false\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;* BibLaTeX supports urls in your references natively; BibTeX does not. For this reason, URLs are omitted from BibTeX exports by default. Using this setting you can have them added to your exports either in a \u0026lt;code\u0026gt;note\u0026lt;/code\u0026gt; field (not as clean, but compatible with BibTeX out of the box), or in a \u0026lt;code\u0026gt;url\u0026lt;/code\u0026gt; field (requires extra packages to be loaded, or bibtex will error out).\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Options: \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;false\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;in a note field\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;in a URL field (requires custom style for url field support)\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Automatically abbreviate journal title if none is set explicitly\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;If set, generates journal abbreviations on export using the Zotero journal abbreviator, according to the abbreviation style selected in the list below the checkbox.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Disregard name prefixes when sorting\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;* Name handling is a lot more complex than I had ever thought it to be. A \u0026lt;em\u0026gt;lot\u0026lt;/em\u0026gt; more complex. BibTeX has really limited ways of dealing with names with particles (van, von, de, etc). If you turn this on, BBT will add code to have \u0026lt;code\u0026gt;van Gogh\u0026lt;/code\u0026gt; sorted under \u0026lt;code\u0026gt;Gogh\u0026lt;/code\u0026gt;.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Export unicode as plain-text latex commands\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;* BibLaTeX actually has really good Unicode support, so you generally want this off. But for some geezers such as me it is simply more pleasing to have things like accented characters translated to their equivalent LaTeX constructs on export.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Export unicode as plain-text latex commands (recommended)\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;True\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;* BibTeX has really spotty Unicode support, so you generally want this on. It will translate things like accented characters to their equivalent LaTeX constructs on export.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Fields to omit from export (comma-separated)\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;If there are some fields you don\u0026amp;rsquo;t want in your bibtex files (such as \u0026lt;code\u0026gt;note\u0026lt;/code\u0026gt; for example), add a list of them here, separated by comma\u0026amp;rsquo;s.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Include JabRef-specific metadata\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;false\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Export JabRef-specific information fields; timetamps and groups for collections. Note that format \u0026amp;ldquo;4\u0026amp;rdquo; will disable caching in exports, which is really undesirable specifically for auto-exports.\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Options: \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;false\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;for JabRef 3\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;for JabRef 4\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Include comments about potential problems with the references\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;* Generate quality reports for exported references.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Use BibLaTeX extended name format (requires biblatex 3.5)\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;* Use the extended biber 2.7 format for names with particles - only works in BibLaTeX 3.5 or later. This biblatex has a new (less ambiguous) way to store creator names. It\u0026amp;rsquo;s technically superior, but the LaTeX world moves slowly, so many people won\u0026amp;rsquo;t have it yet. But if you\u0026amp;rsquo;re an early adopter, you can enable it here\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;When a reference has both a DOI and a URL, export\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;both\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;* Does what it says on the tin, really. If a reference has both a DOI and an URL, you can choose to have them both exported, or either one of them.\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Options: \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;both\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;DOI\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;URL\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/p\u0026gt;  Automatic export\n\u0026lt;h3\u0026gt;Automatic export\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;On Change\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Determines when \u0026lt;a href=\u0026quot;push-and-pull\u0026quot;\u0026gt;automatic exports\u0026lt;/a\u0026gt; are kicked off. Having it disabled still marks  auto-exports as needing updates, so when you re-enable it, those exports will start. On-change means exports happen whenever a reference in the export changes/is added/is removed. On idle does more or less what Disabled (that is, no exports but mark as needing changes), but will kick off exports when your computer is idle. You mostly want this if your computer is performance-constrained (aka slow).\n \u0026lt;p\u0026gt;Options: \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Disabled\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;On Change\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;When Idle\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/p\u0026gt;  Advanced\n\u0026lt;h3\u0026gt;@string definitions\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;If you have externally maintained @string vars paste them here and they will be resolved for subsequent imports\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Deterministically order references and fields; primarily for version control.\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;When on, BBT will deterministically order references on export. This is primarily interesting if you keep the exported file under some kind of version control. Comes at performance and memory consumption cost.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Expand the @string vars below during imports\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;True\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;When enabled, BBT will prepend the @strings section below to all Bib(La)TeX imports and will expand the strings during export.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;If a field could be a @string var, export it without braces\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;false\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;When enabled, BBT will try to retain @string vars its exports unsurrounded by braces; when set to \u0026amp;lsquo;detect\u0026amp;rsquo;, single-word strings will be assumed to be externally-defined @string vars,  when set to \u0026lsquo;match\u0026rsquo;, only @strings declared in the @strings section of the preferences will be preserved. If you don\u0026rsquo;t know what this means, leave it off.\n \u0026lt;p\u0026gt;Options: \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;false\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Assume single-word fields to be @string vars\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Match against the @string vars below\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Warn me when auto-exports take longer than (seconds)\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;10\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;If you have auto-export set up for a large library, Zotero might freeze for during exports. There is nothing I can do about this; caching helps,  but all Zotero exports freeze Zotero while they are running. BBT will warn you if it sees a long-running auto-export to suggest running it only when Zotero goes idle.\n\u0026lt;h3\u0026gt;Warn me when changing citation keys in bulk\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;10\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;For those who are curious about what the \u0026amp;ldquo;Clear/Generate BibTeX key\u0026amp;rdquo; right-click options do, this will warn  you if you are doing this on more than 10 (default) at the same time, to prevent your curiosity from changing all your citation keys at once.\n\u0026lt;h3\u0026gt;postscript\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Snippet of javascript to run \u0026lt;a href=\u0026quot;scripting\u0026quot;\u0026gt;after each reference generation\u0026lt;/a\u0026gt;.\u0026lt;/p\u0026gt;  Hidden preferences\nThe following settings are not exposed in the UI, but can be found under Preferences/Advanced/Config editor.\nAll are prefixed with extensions.zotero.translators.better-bibtex. in the table you will find there\n\u0026lt;h3\u0026gt;ascii\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;If you have unicode turned on you can still selectively replace some characters to plain-text commands; any characters entered here will always be replaced by their LaTeX-command counterparts.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;autoExportDelay\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;1\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;If you have auto-exports set up, BBT will wait this many seconds before actually kicking off the exports to buffer multiple changes in quick succession setting off an unreasonable number of auto-exports. Minimum is 1 second. Changes to this preference take effect after restarting Zotero.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;autoExportIdleWait\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;10\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Number of seconds to wait after your system goes idle before kicking off auto-exports.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;autoExportPrimeExportCacheBatch\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;4\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;If cache priming is kicked off (see \u0026lt;code\u0026gt;autoExportPrimeExportCacheThreshold\u0026lt;/code\u0026gt;), the cache will be primed in batches of \u0026lt;code\u0026gt;autoExportPrimeExportCacheBatch\u0026lt;/code\u0026gt;. The lower this number is, the longer the priming will take (there\u0026amp;rsquo;s a fixed per-prime overhead), but (since the priming uses exports under the hood) the larger it is, the longer the priming actions will lock the UI.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;autoExportPrimeExportCacheDelay\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;100\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Cache priming (see \u0026lt;code\u0026gt;autoExportPrimeExportCacheThreshold\u0026lt;/code\u0026gt;), happens in a tight loop, which will still make Zotero sluggish while the priming runs. By default, BBT will wait a tenths of a second between prime batches;- longer waits mean a more responsive Zotero during the priming, but the priming will take longer to complete.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;autoExportPrimeExportCacheThreshold\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;0\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;If an auto-export is triggered and there are more than \u0026lt;code\u0026gt;autoExportPrimeExportCacheThreshold\u0026lt;/code\u0026gt; un-cached entries, prime the cache before starting the auto-export. This makes the export take longer in total, but since exports in Zotero lock up the UI, priming helps making the actual export run as fast as possible. Really only useful for large exports, but what counts as large is system-dependent, so you can play with this value. The default of \u0026lt;code\u0026gt;0\u0026lt;/code\u0026gt; disables priming. This is a temporary measure until \u0026lt;a href=\u0026quot;https://groups.google.com/d/msg/zotero-dev/lHYEtdgPHCE/nDUyxpFmAgAJ\u0026quot;\u0026gt;https://groups.google.com/d/msg/zotero-dev/lHYEtdgPHCE/nDUyxpFmAgAJ\u0026lt;/a\u0026gt; is implemented in Zotero.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;autoPin\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;When on, BBT will automatically pin the first citekey it generates for an item.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;biblatexExtendedDateFormat\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;True\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Support for EDTF dates in biblatex\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;cacheFlushInterval\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;5\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;How often the Better BibTeX database should be saved to disk. Defaults to once every 5 seconds. Note that  your database is always saved when your computer goes idle, or when you exit Zotero.\n\u0026lt;h3\u0026gt;citeprocNoteCitekey\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Replaces the \u0026amp;ldquo;note\u0026amp;rdquo; field with the bibtex key during citation rendering in Word/Libreoffice. Main use-case is to help migrating word documents to pandoc.  This setting only takes effect during startup, so if you change it, you will have to restart Zotero to have this take effect (or to disable it. Please disable it when done). You will want to use a custom CSL style (such as this) to make this work.\n\u0026lt;h3\u0026gt;csquotes\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;if you set \u0026lt;code\u0026gt;csquotes\u0026lt;/code\u0026gt; to a string of character pairs, each pair will be assumed to be the open and close parts of a pair and will be replaced with a \u0026lt;code\u0026gt;\\\\enquote{...}\u0026lt;/code\u0026gt; construct.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;git\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;config\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Can be \u0026amp;lsquo;off\u0026amp;rsquo;, \u0026amp;lsquo;config\u0026amp;rsquo; or \u0026amp;lsquo;always\u0026amp;rsquo;\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;itemObserverDelay\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;100\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;I\u0026amp;rsquo;ve had reports where Zotero notifies extensions that references have changed, but if BBT then actually  retrieves those same references, Zotero complains they \u0026ldquo;haven\u0026rsquo;t been saved yet\u0026rdquo;. Super. This preference sets the number of microseconds BBT should wait after being notified before acting on the changed references.\n\u0026lt;h3\u0026gt;kuroshiro\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;When on, BBT will load kuroshiro for romajization in citekeys. This uses a lot of memory, easily 100MB. If you don\u0026amp;rsquo;t have Japanese titles/names, keep this off.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;lockedInit\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;\u0026lt;p\u0026gt;BBT locks the UI during startup because I have been told in  no uncertain terms I am not to touch the Zotero database before I get an all-clear from Zotero. This all-clear takes a fair amount of time. As BBT needs database access for generating keys, and everything in BBT depends on the keys being present, it is absolutely safest to make sure BBT initialization has completed before freeing the UI. I want to stress that during most of the lock-time, BBT is simply waiting for Zotero to complete its own initialization; try to do an export of any kind (not just BBT) or to import new references directly after Zotero has started and you\u0026rsquo;ll notice that it may take a while before Zotero reacts. The lockout just puts a face on this hidden init, and prevents nasty race conditions between the BBT and Zotero initialization leading to unpredictable breakage occasionally.\nIf you however cannot stand the lockout during startup and you want to live dangerously, you can turn this off and hope that no race conditions bite you. If you turn this on and experience problems, you are welcome to file a bug report and I will see what I can do, but be prepared for the answer to be \u0026ldquo;turn this back on for now\u0026rdquo;.\nThis is EXPERIMENTAL and this preference may disappear at any moment without notice.\n\u0026lt;h3\u0026gt;parseParticles\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;True\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Name particle handling\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;rawLaTag\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;#LaTeX\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;When an item has this tag, all its fields will be assumed to hold raw LaTeX and will undergo no further transformation. If you set this to \u0026amp;lsquo;*\u0026amp;lsquo;, all items will be assumed to have raw LaTeX.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;relativeFilePaths\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;When exporting a Bib(La)TeX file, if the attachments are stored anywhere under the directory the bibliography is exported to, use relative paths to those attachments. Caching is disabled when this option is on, so it affects performance.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;scrubDatabase\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Finds potential problems in the database and fixes those. This runs \u0026lt;strong\u0026gt;extremely\u0026lt;/strong\u0026gt; slow at startup, don\u0026amp;rsquo;t unable this unless explicitly asked to.\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;skipWords\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;a,ab,aboard,about,above,across,after,against,al,along,amid,among,an,and,anti,around,as,at,before,behind,below,beneath,beside,besides,between,beyond,but,by,d,da,das,de,del,dell,dello,dei,degli,della,dell,delle,dem,den,der,des,despite,die,do,down,du,during,ein,eine,einem,einen,einer,eines,el,en,et,except,for,from,gli,i,il,in,inside,into,is,l,la,las,le,les,like,lo,los,near,nor,of,off,on,onto,or,over,past,per,plus,round,save,since,so,some,sur,than,the,through,to,toward,towards,un,una,unas,under,underneath,une,unlike,uno,unos,until,up,upon,versus,via,von,while,with,within,without,yet,zu,zum\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;list of words to skip in title when generating citation keys\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;suppressBraceProtection\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;If you\u0026amp;rsquo;re dead-set on ignoring both BibTeX/BibLaTeX best practice and the Zotero recommendations on title/sentence  casing, set this preference to \u0026ldquo;true\u0026rdquo; to suppress automatic brace-protection for words with uppercase letters.\n\u0026lt;h3\u0026gt;suppressTitleCase\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;default: \u0026lt;code\u0026gt;False\u0026lt;/code\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;If you\u0026amp;rsquo;re dead-set on ignoring both BibTeX/BibLaTeX best practice and the Zotero recommendations on title/sentence  casing, set this preference to \u0026ldquo;true\u0026rdquo; to suppress title casing for English references.\nMD Citation keys Citation key format default: ​[auth:lower][shorttitle3_3][year]\nSet the pattern used to generate citation keys. The format of the keys is documented here.\nForce citation key to plain text default: True\nIf you have deviated from the default citation key format pattern by specifying your own, you may wind up with non-ASCII characters in your citation keys. You can prevent that using the fold function at the appropriate place in your pattern, but checking this checkbox will just apply fold to all your keys.\nKeep keys unique default: within each library\nAuto-generated (non-pinned) keys automatically get a postfix when they would generate a duplicate. By default, the check for duplicates is restricted to the library/group the item lives in. When set to global, the check will include all libraries/groups, so auto-generated keys would be globally unique. Changing this setting does not affect existign keys - for this you would need to select the items and refresh the keys.\nOptions:\n across all libraries\n within each library\n  LaTeX command default: cite\nUsed for drag-and-drop/quick copy citations in LaTeX format. Set the desired LaTeX citation command here. If you set this to citep, drag-and-drop citations will yield \\citep{key1,key2,...}\nOn conflict with a pinned key, non-pinned keys will be default: kept (causes key duplicates)\nThis determines what happens if you pin a key to a value that is already in use in a different reference but not pinned there. Neither are ideal, you just get to pick your poison. If you let BBT change the non-pinned key by adding a postfix character, the citation key changes which could be problematic for existing papers. If you keep the non-pinned key as-is, your library now has duplicate keys.\nOptions:\n postfixed (causes key changes)\n kept (causes key duplicates)\n  QuickCopy format default: LaTeX\nUsed for drag-and-drop/quick copy using Better BibTeX citekeys. In the Zotero \u0026#34;Export\u0026#34; pane, choose Better BibTeX Quick Copy as the default export format for quick copy, and choose the desired format for the drag-and-drop citations here.\nOptions:\n LaTeX\n Cite Keys\n Pandoc\n Org-mode (citekey)\n Org-mode (item ID)\n org-ref\n RTF Scan\n Atom (https://atom.io/packages/zotero-citations)\n GitBook\n Select link (citekey)\n Select link (item ID)\n  Surround Pandoc citations with brackets default: False\nUsed for drag-and-drop/quick copy citations in Pandoc format. You can use this option to select whether you want to have these pandoc citations surrounded with brackets or not.\nWhen scanning an AUX file, attempt to import references from the attached bib file when their citation keys are not in Zotero default: False\nBy default, when scanning for cited items in the aux file, BBT will just generate a note listing all citation keys it cannot find in Zotero. When this option is turned on, BBT will attempt to import such missing items from the bib file that the AUX file being scanned points to.\nExport Abbreviation style default: ``\nSelect the style for auto-abbreviation. Only applicable to Juris-M; in Zotero, the style for automatic abbreviation is not configurable.\nAdd URLs to BibTeX export default: false\n* BibLaTeX supports urls in your references natively; BibTeX does not. For this reason, URLs are omitted from BibTeX exports by default. Using this setting you can have them added to your exports either in a note field (not as clean, but compatible with BibTeX out of the box), or in a url field (requires extra packages to be loaded, or bibtex will error out).\nOptions:\n false\n in a note field\n in a URL field (requires custom style for url field support)\n  Automatically abbreviate journal title if none is set explicitly default: False\nIf set, generates journal abbreviations on export using the Zotero journal abbreviator, according to the abbreviation style selected in the list below the checkbox.\nDisregard name prefixes when sorting default: False\n* Name handling is a lot more complex than I had ever thought it to be. A lot more complex. BibTeX has really limited ways of dealing with names with particles (van, von, de, etc). If you turn this on, BBT will add code to have van Gogh sorted under Gogh.\nExport unicode as plain-text latex commands default: False\n* BibLaTeX actually has really good Unicode support, so you generally want this off. But for some geezers such as me it is simply more pleasing to have things like accented characters translated to their equivalent LaTeX constructs on export.\nExport unicode as plain-text latex commands (recommended) default: True\n* BibTeX has really spotty Unicode support, so you generally want this on. It will translate things like accented characters to their equivalent LaTeX constructs on export.\nFields to omit from export (comma-separated) default: ``\nIf there are some fields you don\u0026#39;t want in your bibtex files (such as note for example), add a list of them here, separated by comma\u0026#39;s.\nInclude JabRef-specific metadata default: false\nExport JabRef-specific information fields; timetamps and groups for collections. Note that format \u0026#34;4\u0026#34; will disable caching in exports, which is really undesirable specifically for auto-exports.\nOptions:\n false\n for JabRef 3\n for JabRef 4\n  Include comments about potential problems with the references default: False\n* Generate quality reports for exported references.\nUse BibLaTeX extended name format (requires biblatex 3.5) default: False\n* Use the extended biber 2.7 format for names with particles - only works in BibLaTeX 3.5 or later. This biblatex has a new (less ambiguous) way to store creator names. It\u0026#39;s technically superior, but the LaTeX world moves slowly, so many people won\u0026#39;t have it yet. But if you\u0026#39;re an early adopter, you can enable it here\nWhen a reference has both a DOI and a URL, export default: both\n* Does what it says on the tin, really. If a reference has both a DOI and an URL, you can choose to have them both exported, or either one of them.\nOptions:\n both\n DOI\n URL\n  Automatic export Automatic export default: On Change\nDetermines when automatic exports are kicked off. Having it disabled still marks auto-exports as needing updates, so when you re-enable it, those exports will start. On-change means exports happen whenever a reference in the export changes/is added/is removed. On idle does more or less what Disabled (that is, no exports but mark as needing changes), but will kick off exports when your computer is idle. You mostly want this if your computer is performance-constrained (aka slow).\nOptions:\n Disabled\n On Change\n When Idle\n  Advanced @string definitions default: ``\nIf you have externally maintained @string vars paste them here and they will be resolved for subsequent imports\nDeterministically order references and fields; primarily for version control. default: False\nWhen on, BBT will deterministically order references on export. This is primarily interesting if you keep the exported file under some kind of version control. Comes at performance and memory consumption cost.\nExpand the @string vars below during imports default: True\nWhen enabled, BBT will prepend the @strings section below to all Bib(La)TeX imports and will expand the strings during export.\nIf a field could be a @string var, export it without braces default: false\nWhen enabled, BBT will try to retain @string vars its exports unsurrounded by braces; when set to \u0026#39;detect\u0026#39;, single-word strings will be assumed to be externally-defined @string vars, when set to \u0026#39;match\u0026#39;, only @strings declared in the @strings section of the preferences will be preserved. If you don\u0026#39;t know what this means, leave it off.\nOptions:\n false\n Assume single-word fields to be @string vars\n Match against the @string vars below\n  Warn me when auto-exports take longer than (seconds) default: 10\nIf you have auto-export set up for a large library, Zotero might freeze for during exports. There is nothing I can do about this; caching helps, but all Zotero exports freeze Zotero while they are running. BBT will warn you if it sees a long-running auto-export to suggest running it only when Zotero goes idle.\nWarn me when changing citation keys in bulk default: 10\nFor those who are curious about what the \u0026#34;Clear/Generate BibTeX key\u0026#34; right-click options do, this will warn you if you are doing this on more than 10 (default) at the same time, to prevent your curiosity from changing all your citation keys at once.\npostscript default: ``\nSnippet of javascript to run after each reference generation.\nHidden preferences The following settings are not exposed in the UI, but can be found under Preferences/Advanced/Config editor.\nAll are prefixed with extensions.zotero.translators.better-bibtex. in the table you will find there\nascii default: ``\nIf you have unicode turned on you can still selectively replace some characters to plain-text commands; any characters entered here will always be replaced by their LaTeX-command counterparts.\nautoExportDelay default: 1\nIf you have auto-exports set up, BBT will wait this many seconds before actually kicking off the exports to buffer multiple changes in quick succession setting off an unreasonable number of auto-exports. Minimum is 1 second. Changes to this preference take effect after restarting Zotero.\nautoExportIdleWait default: 10\nNumber of seconds to wait after your system goes idle before kicking off auto-exports.\nautoExportPrimeExportCacheBatch default: 4\nIf cache priming is kicked off (see autoExportPrimeExportCacheThreshold), the cache will be primed in batches of autoExportPrimeExportCacheBatch. The lower this number is, the longer the priming will take (there\u0026#39;s a fixed per-prime overhead), but (since the priming uses exports under the hood) the larger it is, the longer the priming actions will lock the UI.\nautoExportPrimeExportCacheDelay default: 100\nCache priming (see autoExportPrimeExportCacheThreshold), happens in a tight loop, which will still make Zotero sluggish while the priming runs. By default, BBT will wait a tenths of a second between prime batches;- longer waits mean a more responsive Zotero during the priming, but the priming will take longer to complete.\nautoExportPrimeExportCacheThreshold default: 0\nIf an auto-export is triggered and there are more than autoExportPrimeExportCacheThreshold un-cached entries, prime the cache before starting the auto-export. This makes the export take longer in total, but since exports in Zotero lock up the UI, priming helps making the actual export run as fast as possible. Really only useful for large exports, but what counts as large is system-dependent, so you can play with this value. The default of 0 disables priming. This is a temporary measure until https://groups.google.com/d/msg/zotero-dev/lHYEtdgPHCE/nDUyxpFmAgAJ is implemented in Zotero.\nautoPin default: False\nWhen on, BBT will automatically pin the first citekey it generates for an item.\nbiblatexExtendedDateFormat default: True\nSupport for EDTF dates in biblatex\ncacheFlushInterval default: 5\nHow often the Better BibTeX database should be saved to disk. Defaults to once every 5 seconds. Note that your database is always saved when your computer goes idle, or when you exit Zotero.\nciteprocNoteCitekey default: False\nReplaces the \u0026#34;note\u0026#34; field with the bibtex key during citation rendering in Word/Libreoffice. Main use-case is to help migrating word documents to pandoc. This setting only takes effect during startup, so if you change it, you will have to restart Zotero to have this take effect (or to disable it. Please disable it when done). You will want to use a custom CSL style (such as this) to make this work.\ncsquotes default: ``\nif you set csquotes to a string of character pairs, each pair will be assumed to be the open and close parts of a pair and will be replaced with a \\\\enquote{...} construct.\ngit default: config\nCan be \u0026#39;off\u0026#39;, \u0026#39;config\u0026#39; or \u0026#39;always\u0026#39;\nitemObserverDelay default: 100\nI\u0026#39;ve had reports where Zotero notifies extensions that references have changed, but if BBT then actually retrieves those same references, Zotero complains they \u0026#34;haven\u0026#39;t been saved yet\u0026#34;. Super. This preference sets the number of microseconds BBT should wait after being notified before acting on the changed references.\nkuroshiro default: False\nWhen on, BBT will load kuroshiro for romajization in citekeys. This uses a lot of memory, easily 100MB. If you don\u0026#39;t have Japanese titles/names, keep this off.\nlockedInit default: False\nBBT locks the UI during startup because I have been told in no uncertain terms I am not to touch the Zotero database before I get an all-clear from Zotero. This all-clear takes a fair amount of time. As BBT needs database access for generating keys, and everything in BBT depends on the keys being present, it is absolutely safest to make sure BBT initialization has completed before freeing the UI. I want to stress that during most of the lock-time, BBT is simply waiting for Zotero to complete its own initialization; try to do an export of any kind (not just BBT) or to import new references directly after Zotero has started and you\u0026#39;ll notice that it may take a while before Zotero reacts. The lockout just puts a face on this hidden init, and prevents nasty race conditions between the BBT and Zotero initialization leading to unpredictable breakage occasionally.\nIf you however cannot stand the lockout during startup and you want to live dangerously, you can turn this off and hope that no race conditions bite you. If you turn this on and experience problems, you are welcome to file a bug report and I will see what I can do, but be prepared for the answer to be \u0026#34;turn this back on for now\u0026#34;.\nThis is EXPERIMENTAL and this preference may disappear at any moment without notice.\nparseParticles default: True\nName particle handling\nrawLaTag default: #LaTeX\nWhen an item has this tag, all its fields will be assumed to hold raw LaTeX and will undergo no further transformation. If you set this to \u0026#39;*\u0026#39;, all items will be assumed to have raw LaTeX.\nrelativeFilePaths default: False\nWhen exporting a Bib(La)TeX file, if the attachments are stored anywhere under the directory the bibliography is exported to, use relative paths to those attachments. Caching is disabled when this option is on, so it affects performance.\nscrubDatabase default: False\nFinds potential problems in the database and fixes those. This runs extremely slow at startup, don\u0026#39;t unable this unless explicitly asked to.\nskipWords default: a,ab,aboard,about,above,across,after,against,al,along,amid,among,an,and,anti,around,as,at,before,behind,below,beneath,beside,besides,between,beyond,but,by,d,da,das,de,del,dell,dello,dei,degli,della,dell,delle,dem,den,der,des,despite,die,do,down,du,during,ein,eine,einem,einen,einer,eines,el,en,et,except,for,from,gli,i,il,in,inside,into,is,l,la,las,le,les,like,lo,los,near,nor,of,off,on,onto,or,over,past,per,plus,round,save,since,so,some,sur,than,the,through,to,toward,towards,un,una,unas,under,underneath,une,unlike,uno,unos,until,up,upon,versus,via,von,while,with,within,without,yet,zu,zum\nlist of words to skip in title when generating citation keys\nsuppressBraceProtection default: False\nIf you\u0026#39;re dead-set on ignoring both BibTeX/BibLaTeX best practice and the Zotero recommendations on title/sentence casing, set this preference to \u0026#34;true\u0026#34; to suppress automatic brace-protection for words with uppercase letters.\nsuppressTitleCase default: False\nIf you\u0026#39;re dead-set on ignoring both BibTeX/BibLaTeX best practice and the Zotero recommendations on title/sentence casing, set this preference to \u0026#34;true\u0026#34; to suppress title casing for English references.\n"
},
{
	"uri": "/citing/aux-scanner/",
	"title": "AUX Scanner",
	"tags": [],
	"description": "",
	"content": "You can populate a reference collection, or tag items in your library, from an existing paper by scanning the aux file generated by bibtex. AUX Scanning can be triggered from the Tools menu (for tagging the cited items) or by right-clicking a collection (for adding them to a collection). The scanner will read your AUX files and will put references you cited in the associated LaTeX document into the current collection.\nBy default, BBT will add a note for references cited in the LaTeX document but which do not exist in your Zotero library, but citation keys must be present in your library before the scan is started \u0026ndash; BBT will by default not create new references for citekeys it doesn\u0026rsquo;t already know about. You can enable \u0026lsquo;AUX Import\u0026rsquo; in the preferences, and when that is on, if the scan finds citekeys not already in your Zotero library, it will attempt to read those (but only those) items from the bibtex file named in the aux file.\n"
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/citing/cayw/",
	"title": "Cite as you Write",
	"tags": [],
	"description": "",
	"content": " Good news for TeXnicians and those down with Mark (aka Markdown, RST, whatnot): this is the time to go pester the author of your favorite editor for Zotero integration!\nEditor integration vim Graciously supplied by David Lukes:\npaste it in your .vimrc (and modify to your liking):\nfunction! ZoteroCite() \u0026quot; pick a format based on the filetype (customize at will) let format = \u0026amp;filetype =~ '.*tex' ? 'citep' : 'pandoc' let api_call = 'http://localhost:23119/better-bibtex/cayw?format='.format.'\u0026amp;brackets=1' let ref = system('curl -s '.shellescape(api_call)) return ref endfunction noremap \u0026lt;leader\u0026gt;z \u0026quot;=ZoteroCite()\u0026lt;CR\u0026gt;p inoremap \u0026lt;C-z\u0026gt; \u0026lt;C-r\u0026gt;=ZoteroCite()\u0026lt;CR\u0026gt;  This inserts the citation at the cursor using the shortcut ctrl-z (in insert mode) or \u0026lt;leader\u0026gt;z (in normal, visual etc. modes, \u0026lt;leader\u0026gt; being backslash by default).\nZotero Citations for Atom A sample implementation of real integration (rather than the working-but-clunky workarounds using paste) can be found in the Zotero Citations package for the Atom editor.\nScrivener 2.0/Marked 2 for Mac Dave Smith has gracefully written instructions on how to set up Scrivener 2.0 and Marked 2 for OSX to use the CAYW picker, including ready-to-run apps\nScrivener 1.0 for Windows Emilie has writen instructions for using the CAYW picker for Scrivener 1.0 in Windows 10, with the necessary files\nLinux  Emma Reisz has gracefully written instructions and scripts for setting up CAYW on Linux. ConorIA has more versatile solution called zotero4overleaf, which was inspired by Emma\u0026rsquo;s scripts.  DIY BBT exposes an URL at http://localhost:23119/better-bibtex/cayw. The url accepts the following URL parameters:\n   parameter      probe If set to any non-empty value, returns ready. You can use this to test whether BBT CAYW picking is live; it will not pop up the picker   format Set the output format   clipboard Any non-empty value will copy the results to the clipboard   minimize Any non-empty value minimize all Firefox windows after a pick    The following formats are available:\n latex. Generates natbib citation commands. Extra URL parameters allowed:  command: the citation command to use (if unspecified, defaults to cite)  cite is an alias for latex with the assumption you want the cite command to be cite biblatex. Generates biblatex citation commands. Extra URL parameters allowed:  command: the citation command to use (if unspecified, defaults to autocite)  mmd: MultiMarkdown pandoc. Accepts additional URL parameter brackets; any non-empty value surrounds the citation with brackets asciidoctor-bibtex scannable-cite for the ODF scanner formatted-citation: output formatted citation as per the current Zotero quick-export setting, if it is set to a citation style, and not an export format formatted-bibliography: output formatted bibliography as per the current Zotero quick-export setting, if it is set to a citation style, and not an export format translate invokes a Zotero export translator. Extra URL parameters allowed:  translator: stripped name of one of the BBT translators (lowercased, remove \u0026lsquo;better\u0026rsquo;, and only the letters, e.g. biblatex or csljson), or a translator ID. Defaults to biblatex. exportNotes: set to true to export notes useJournalAbbreviation: set to true to use journal abbreviations   The picker passes the following data along with your picked references if you filled them out:\n   field      locator the place within the work (e.g. page number)   prefix for stuff like \u0026ldquo;see \u0026hellip;\u0026rdquo;   suffix for stuff after the citations   suppress author if you only want the year    However not all output formats support these. Pandoc and scannable cite are the richest ones, supporting all 4. MultiMarkdown supports none. The formatted- formats will ignore these. LaTeX supports all 4, in a way:\n in the latex (natbib) format: if you choose suppress author for none or all of your references in a pick, you will get the citation as you would normally enter it, such as \\cite{author1,author2}, or \\citeyear{author1,author2}. If you use locator, prefix, suffix in any one of them, or you use suppress author for some but not for others, the picker will write them out all separate, like \\cite[p. 1]{author1}\\citeyear{author2}, as natbib doesn\u0026rsquo;t seem to have a good mechanism for combined citations that mix different prefixes/suffixes/locators. in the biblatex format: suppress author is ignored unless the command is one of \\cite, \\autocite or \\parencite AND there is one reference only, in which case the starred variant of the command is returned, which hides the author; for multiple references with locators, prefixes or suffixes, the s-affixed variant of the command is generated  The clipboard option can be used as a workaround for editors that haven\u0026rsquo;t gotten around to integrating this yet. If you use this option you will probably want to bind to a hotkey, either system-wide (which is going to be platform-dependent, I know AutoHotKey works for windows, for OSX Karabiner ought to do the job, and for Linux you could give IronAHK or autokey a shot).\nFor example, if you call up http://localhost:23119/better-bibtex/cayw?format=mmd\u0026amp;clipboard=yes, the Zotero citation picker will pop up. If you then select two references that happen to have cite keys adams2001 and brigge2002, then\n the response body will be [#adams2001][][#brigge2002][], and [#adams2001][][#brigge2002][] will be left on the clipboard  Playing around For testing for other markdown formatters, you can construct simple references yourself, using:\n citeprefix, default empty, for text to put before the full citation. citepostfix, default empty, for text to put after the full citation. keyprefix, default empty, for text to put before each individual citekey keypostfix, default empty, for text to put after each individual citekey separator, default ,, for text to put between citekeys  but if you need an extra format, just ask.\n"
},
{
	"uri": "/support/faq/",
	"title": "Frequently Asked Questions",
	"tags": [],
	"description": "",
	"content": " Are there any plans to support Firefox 57+? BBT lives where Zotero lives, and Zotero only has standalone these days. BBT is installed inside Zotero instead of in the browser. Please see the installation instructions to get started with BBT.\nBBT is changing the capitalization of my titles \u0026ndash; why? There isn\u0026rsquo;t a straightforward one-to-one mapping for all Zotero to Bib(La)TeX fields. For most I can make reasonable choices, but there are some things where Better BibTeX takes a little more liberties with your references in order to get sensible output.\nTitle fields in particular are a total mess. Zotero recommends having your titles in sentence case because that\u0026rsquo;s what the embedded citation processor expects, but of course, BibLaTeX expects your titles to be in Title Case\u0026hellip; but only if they\u0026rsquo;re in English. Nice. In order to translate the Zotero recommendation into Bib(La)TeX best practice, BBT will title-case the titles of English references. English references, as far as BBT is concerned, are those references that have their language explicitly set to an English language (american counts as English for example), and those references that have no explicit language set. To do this, BBT uses the same title-caser that Zotero uses to produce title-cased styles such as Chicago.\nThe titles so modified will then pass through your Bib(La)TeX processor, which will in turn try to lowercase or initial-caps some words and not others \u0026ndash; for English references. But then sometimes, you want words that have capitals to keep. BBT assumes that if a word has at least one capital letter (subject to some rather complex exceptions) you meant it to be there, and you want BibTeX to leave it alone no matter what. To do that, it wraps those (strings of) words in those double braces. This is to let BibTeX know that ISDN may not be changed to isdn or Isdn, regardless of the bibliography style in play.\nThe simplest approach would be to wrap title fields in extra braces as a whole, and some sites will erroneously recommend doing so (looking at you here MIT librarians). But there are styles do need to recapitalize parts of the title (for example to selectively downcase the titlecasing), and having the whole field so wrapped interferes with that. So Better BibTeX wraps individual words \u0026ndash; or strings of those words \u0026ndash; that have capitals in them with double braces.\nFor English titles BBT will Title Case and brace-protect your titles on output. Except, those Title Cased words which BBT changed itself will not be wrapped in double-braces, as it is OK for the styles to change casing for those, depending on the style at play. So I like ISDN heaps better than dialup would output to I Like {{ISDN}} Heaps Better than Dialup. Apparently non-English titles are supposed to be in sentence case, so BBT doesn\u0026rsquo;t touch those.\nYou can steer this process somewhat by enclosing the parts you don\u0026rsquo;t want case manipulation on in \u0026lt;span class=\u0026quot;nocase\u0026quot;\u0026gt;...\u0026lt;/span\u0026gt;. Anything between those won\u0026rsquo;t be touched by Zotero or BBT. This is formally supported by Zotero and will work in the Word/LibreOffice plugins as well as in the BibTeX export. This will be required for words you wish to always keep lowercase, for example. Also, if you don\u0026rsquo;t generally use Zotero for generating bibliographies but just for BibTeX reference management, you can turn on the hidden preference extensions.zotero.translators.better-bibtex.suppressTitleCase to keep BBT from applying title-casing, but take note that if you do this, the bibliographies you get from Zotero and the bibliograhies you get through Bib(La)TeX will differ, and you can\u0026rsquo;t complain about this.\nWhy the double braces? But why then the double-braces ({{...}}) rather than the commonly recommended single braces ({...})?\nThis is not because of some arcane aesthetic preference, but because the Bib(La)TeX case protection rules are incredibly convoluted (#541, #383). For example, here are some \u0026ldquo;interesting\u0026rdquo; cases that BBT has learned to deal with. Did you know that\n {\\emph{Homo sapiens}} un-case-protects Homo sapiens? It sure was a surprise to me. So \\emph{Homo sapiens} is case-protected (will not be recapitalized by Bib(La)TeX), but {\\emph{Homo sapiens}} is not case-protected so it will be recapitalized. So to get predictable behavior, this is written out as {{\\emph{Homo sapiens}}}. casing behavior over the whole reference field depends on whether there\u0026rsquo;s a slash-command at the first position of the title? apparently, to make sure that Reading HLA Hart's: \u0026lt;i\u0026gt;The Concept of Law\u0026lt;/i\u0026gt; renders as expected means I have to output the astoundingly ugly {Reading {{HLA Hart}}'s: {{{\\emph{The Concept}}}}{\\emph{ of }}{{{\\emph{Law}}}}}?  To make matters even more complex, so many people have in the past wrongly recommended to \u0026ldquo;just wrap everything in one extra set of braces\u0026rdquo; that biblatex now ignores exactly that pattern (see here and here).\nThe double-bracing is the only unambiguous rule I could construct that consistently gets the rendered reference right (so far).\nBib(La)TeX provides a never-ending stream of edge cases, which BBT tries to decide algorithmically. I try to keep the resulting file as pretty as I can (I\u0026rsquo;m sensitive to the aesthetics myself), but the target is best described as \u0026ldquo;given reasonable input, generate well-rendering output\u0026rdquo;, and reasonable-to-well-rendering in the BBT case will have to include \u0026ldquo;follows Zotero recommendations for storing references\u0026rdquo; and \u0026ldquo;prefer intent-preserving LaTeX over pretty-looking LaTeX\u0026rdquo;.\nBib(La)TeX be crazy.\nImporting JabRef databases JabRef import works generally well but has a few gotchas:\n If you have dynamic (query-based) groups these will not be imported. If you have set a default folder for the pdf files in your JabRef preferences, the file paths in your JabRef database will be relative to that directory, but BBT can\u0026rsquo;t read those preferences, so all attachments will fail to import. You can fix this by going into Jabref and selecting File - Library properties option, then filling out the path to the attachments directory in general file directory.  "
},
{
	"uri": "/support/performance/",
	"title": "Performance",
	"tags": [],
	"description": "",
	"content": " The Better BibTeX exporters are a lot slower than the standard Zotero Bib(La)TeX exporters. If you have a small library, you will not likely notice this, but if you have several thousand references, and you are in the habit of exporting substantial parts of your library, this gets annoying really fast.\nTo deal with this problem, Better BibTeX implements an extensive caching system. With a filled cache, Better BibTeX is substantially faster than the default Zotero exporters. Specifically for automatic background exports, a filled cache is a good thing to have.\nFor technical reasons, if you export the file attachments as part of your export, the cache is skipped altogether, so this will always be slow. This is also why you cannot set up auto-exports with file exports.\nTL;DR There\u0026rsquo;s a more technical explanation below, but the TL;DR version is that you want to have a filled cache. If you want to get it over with, export your entire library (once, no need to tick \u0026lsquo;Keep Updated\u0026rsquo;) using the \u0026lsquo;Better BibTeX\u0026rsquo; format and go grab coffee (or lunch, depending on the size of your library). After that, things should be much better.\nHere are some numbers from a test with a library consisting of 1241 references with 284 attachments (the attachments are only linked to, not exported):\n   Exporter      Zotero 14.1s   Better BibTeX, empty cache 53.0s   Better BibTeX, filled cache 3.7s    note: if you have \u0026lsquo;Export files\u0026rsquo; enabled during export, or set the JabRef export format to 4, the cache will not be active. If you do large (auto)exports, avoid these.\nCaching Initial state Initially, your cache will be empty. The first export of any reference using Better BibTeX will therefore be a little over 14 times as slow as subsequent exports. After that, it gets pretty zippy, as the process of exporting a reference will also cache that reference for the current export settings. This means if you export once with, and once without notes (one of the options in the export popup), you will hit an empty cache twice. If you set up an automatic export, the export you do that registers it for auto-update will already be the first export, so if your references weren\u0026rsquo;t cached already, they will be before subsequent auto-exports.\nCache refresh The cache entry for a reference is retained as long as you do not make any changes to that reference. Any change you make will drop all cache entries for that reference (so all variants you had for different export options). The cache for that reference will be refreshed as soon as you export it again, either manually or automatically.\nCache drop Any change you make to the Better BibTeX preferences will drop the whole cache. The behavior of the Better BibTeX exporters are highly configurable, and it is impossible for me to figure out which entries would be affected specifically. Keep this in mind for large libraries; if you want to make changes to your configuration, make them all at once.\nThe same applies to upgrades. As the export behavior quite frequently changes between versions, Better BibTeX will drop the cache during first startup of the newer version. This can be a nuisance if you have a large library, so if you have a substantial cache (where \u0026lsquo;substantial\u0026rsquo; is configurable by changing confirmCacheResetSize), you will be asked whether you want to drop or retain your cache at this point.\nPlease do keep in mind that some new settings will not be reflected in your exports until the cache entry is refreshed. This is a trade-off you will have to make. If you want to refresh a single entry, just change anything (and back if you wish after), or go into the Better BibTeX debug settings and click \u0026ldquo;Reset Cache\u0026rdquo; to refresh them all.\nIf you have chosen to retain your cache and you are experiencing problems, please first clear your cache and try to reproduce your problem before lodging an issue.\n"
},
{
	"uri": "/sponsoring/",
	"title": "Sponsoring BBT",
	"tags": [],
	"description": "",
	"content": "While the development needs of BBT are to a large extent covered by the use of services such as github and travis, my development system does require the occasional upgrade. My trusty MacBook Air is not really hacking it anymore, and in order to do decent cross-platform support, a MacBook (or a system capable of running macOS in VMware player) is what I need. Anything you can spare towards making that upgrade a reality is very much appreciated. If you\u0026rsquo;d rather contribute a little bit each month (and a little means a lot) so I can save up for a replacement a year or so down the line, head on over to Patreon. Many, many thanks, also to the existing contributors \u0026ndash; thanks to you I\u0026rsquo;m currently at 34.5% of target; so looking forward to replace my trusty manchineel.\n"
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/support/translations/",
	"title": "Translations",
	"tags": [],
	"description": "",
	"content": "BBT is currently available in English, German and French. You can help out by adding new translations or fixing existing ones on Crowdin.\n"
}]