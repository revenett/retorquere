{
  "`abbr`": "Abbreviates the text. Only the first character and subsequent characters following white space will be included.\n**Only works if the value you're filtering contains spaces**, so you'll most likely want to use this either on one of the fields from the table above, or `journal` (which is the only function with returns values with spaces).",
  "`alphanum`": "clears out everything but unicode alphanumeric characters (unicode character classes `L` and `N`)",
  "`ascii`": "removes all non-ascii characters",
  "`capitalize`": "uppercases the first letter of each word",
  "`clean`": "transliterates the citation keys and removes unsafe characters",
  "`condense`": "this replaces spaces in the value passed in. You can specify what to replace it with by adding it as a\nparameter, e.g `condense=_` will replace spaces with underscores. **Parameters should not contain spaces** unless\nyou want the spaces in the value passed in to be replaced with those spaces in the parameter",
  "`fold`": "tries to replace diacritics with ascii look-alikes. Removes non-ascii characters it cannot match",
  "`lower`": "Forces the text inserted by the field marker to be in lowercase. For example, `[auth:lower]` expands the last name of the first author in lowercase.",
  "`nopunct`": "Removes punctuation",
  "`nopunctordash`": "Removes punctuation and word-connecting dashes",
  "`postfix`": "postfixes with its parameter, so `postfix=_` will add an underscore to the end if, and only if, the value\nit is supposed to postfix isn't empty",
  "`prefix`": "prefixes with its parameter, so `prefix=_` will add an underscore to the front if, and only if, the value\nit is supposed to prefix isn't empty. If you want to use a reserved character (such as `:` or `\\`), you'll need to\nadd a backslash (`\\`) in front of it.",
  "`replace`": "replaces text, case insensitive; `:replace=.etal,&etal` will replace `.EtAl` with `&etal`",
  "`select`": "selects words from the value passed in. The format is `select=start,number` (1-based), so `select=1,4`\nwould select the first four words. If `number` is not given, all words from `start` to the end of the list are\nselected.\n**Only works if the value you're filtering contains spaces**, so you'll most likely want to use this either on one of the fields from the table above, or `journal` (which is the only function with returns values with spaces).\n",
  "`skipwords`": "filters out common words like 'of', 'the', ... the list of words can be seen and changed by going into\n`about:config` under the key `extensions.zotero.translators.better-bibtex.skipWords` as a comma-separated,\ncase-insensitive list of words.\nIf you want to strip words like 'Jr.' from names, you could use something like `[Auth:nopunct:skipwords:fold]`\nafter adding `jr` to the skipWords list.\nNote that this filter is always applied if you use `title` (which is different from `Title`) or `shorttitle`.\n\n**Only works if the value you're filtering contains spaces**, so you'll most likely want to use this either on one of the fields from the table above, or `journal` (which is the only function with returns values with spaces).\n",
  "`substring`": "(`substring=start,n`) selects `n` (default: all) characters starting at `start` (default: 1)",
  "`upper`": "Forces the text inserted by the field marker to be in uppercase. For example, `[auth:upper]` expands the last name of the first author in uppercase."
}